import TsSfApex from 'tree-sitter-sfapex';
import { ShortIdentifierLengths } from './rules/ShortIdentifierLengths.js';
import ScanManager from './ScanManager.js';
import Parser, { Language } from 'tree-sitter';
import { AllIdentifierLengths } from './rules/AllIdentifierLengths.js';
import fs from 'fs';

const parser: Parser = new Parser();
const language: Language = TsSfApex.apex;

// const opt: ScannerOptions = {
//     overrideQuery: '',
//     sourcePath: './apex/Test.cls',
//     language: language,
//     rules: [new ShortIdentifierLengths(), new AllIdentifierLengths()],
// };
//
// Scanner.create(opt)
//     .then((s) => {
//         void s.run().then((res) => console.log(res));
//     })
//     .catch(() => console.log('ERROR'))
//     .finally(() => console.log('FINALLY'));

// const mgr: ScanManager = new ScanManager(parser, language, data, [
//     new ShortIdentifierLengths(),
//     new AllIdentifierLengths(),
// ]);
//
// mgr.scan()
//     .then((results) => {
//         results.forEach((result) => {
//             console.log(`${result.rule.Name}:${result.sourceNode.text}`);
//         });
//     })
//     .catch(() => console.log('ERROR'));

let filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_AppointmentDataBatchDelete.cls';
let data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
let mgr: ScanManager = new ScanManager(parser, language, data, [
    new ShortIdentifierLengths(),
    new AllIdentifierLengths(),
]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));

filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_AppointmentDataBatchDeleteTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_AppointmentDataSchedulable.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_AppointmentDataSchedulableTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_AppointmentSchedulingAccessCheck.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_AppointmentSchedulingAccessCheckTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_ClearTriageWrapperController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_ClearTriageWrapperControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_ClinicGroupSearchController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_ClinicGroupSearchControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_GetUserPermissionRemoteAction.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_GetUserPermissionRemoteActionTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_OmniRemoteAction.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_OmniRemoteActionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_ProviderSearchController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_ProviderSearchControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_ScheduleAppointmentHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_ScheduleAppointmentHelperTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_SchedulingOmniConnector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC_SchedulingOmniConnectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR_ClinicGroupRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR_ClinicGroupRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR_ClinicScheduleSlotRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR_ClinicScheduleSlotRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR_ExternalDataSourceRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR_ExternalDataSourceRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR_ProviderRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR_ProviderRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/ABS/ABS_BatchExecutioner.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/ABS/ABS_BatchFinalizer.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/COMM/COMM_VDIFResponseParser.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/COMM/COMM_Vdif_NoteAndEncounterParams.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/COMM/COMM_Vdif_PatientAndProviderParams.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_CaseController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_CaseController_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_CasePRValidator.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_CasePRValidator_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_CaseTriggerHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_CaseTriggerHelper_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_CustomReportController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_CustomReportController_Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_FacilityManagementController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_FacilityManagementController_Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_NurseNoteController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_NurseNoteController_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/NTSP/NTSP_TestDataFactory.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/pcScheduleShiftsController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/pcScheduleShiftsControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/pcServiceOperatingHoursController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/pcServiceOperatingHoursControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_AddPatientController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_AddPatientControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_AgentWorkRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_AgentWorkRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_AvailabilityGanttChart.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_AvailabilityGanttChart_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_AWPushEventRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_AWPushEventRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_CacheResults.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_CaseFeedbackAnswerRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_CaseFeedbackAnswerRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_CaseFeedbackController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_CaseFeedbackController_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_CaseListController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_CaseListControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatControllerHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatPushEventRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatPushEventRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatSessionRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatSessionRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatSessionTriggerHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatSessionTriggerHelperTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatStreamController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ChatStreamControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ConsortiumsRelatedListController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ConsortiumsRelatedListController_Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_CustomException.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_FeedItemRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_FeedItemRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_LocationBasedRouting.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_LocationBasedRoutingHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_LocationBasedRoutingHelperTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_LocationbasedRoutingTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_LocationsRelatedListController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_LocationsRelatedListController_Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_LookupController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_LookupControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ManagerController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ManagerController_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_NDTHClinicalServicesRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_NDTHClinicalServicesRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_NDTHHostLocationRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_NDTHHostLocationRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_NDTHServiceLocationRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_NDTHServiceLocationRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PatientMpiCalloutsInvocable.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PatientMpiCalloutsInvocableTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PatientVistaProxyAddInvocable.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PatientVistaProxyAddInvocableTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcCaseRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcCaseRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcCaseShareRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcCaseShareRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcConfigSettingsUtility.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcConfigSettingsUtilityTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcUserLocationSelectorController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcUserLocationSelectorControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcUserRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_PrcUserRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ProviderConnectController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ProviderConnectControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_RelatedListHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ServiceResourceRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ServiceResourceRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ServiceResourceSkillRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ServiceResourceSkillRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ServiceTeamMemberTriggerHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_ServiceTeamMemberTriggerHandler_Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_SpecialistUnavailabilityRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_SpecialistUnavailabilityRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_SuperScreenPushEvent.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_SuperScreenPushEventTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_TestDataFactory.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_UserServicePresenceRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_UserServicePresenceRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_VISNsRelatedListController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_VISNsRelatedListController_Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_VistaProxyAddHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/PC/PC_VistaProxyAddHelperTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucAssignFromQueue.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucAssignFromQueueTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucCommonUtils.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucCommonUtilsTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucCreateTaskActionController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucCreateTaskActionControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucGetCurrentVISNStatusInvocable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucGetUserDivisionInvocable.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucLookupController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucLookupControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucTeleECCaseNotifyBatch.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucTeleECCaseNotifyBatchHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucTeleECCaseNotifyBatchTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/tucTestUtils.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_CPRSToLocationConversionTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_CustomCasePathController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_CustomCasePathController_Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_EscalatePauseButtonController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_EscalatePauseButtonControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_HomeChildKanbanCls.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_HomeChildKanbanCls_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_HomeChildKanbanUtil.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_KanbanConfigList.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_OrdersContextController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_OrdersContextControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_ScheduleTeleEcQueuePause.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_ScheduleTeleEcQueuePauseTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_SupportedLocationByVISNMdtRepo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_SupportedLocationByVISNMdtRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_TeleEcEscalationStatusRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_TeleEcEscalationStatusRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_VISNPauseControlRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/TUC/TUC_VISNPauseControlRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCCMPIClient.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCCMPIClientTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AccountModule.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AccountModuleTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AccountPopupController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AccountPopupControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AccountSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AccountSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AccountService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AccountServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ActivityLogRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ActivityLogRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ActivityLogRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AdapterUtils_Note.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AdapterUtils_NoteTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Adapter_BridgToLWC.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Adapter_BridgToLWCTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Adapter_NoteToJson.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Adapter_NoteToJsonTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Adapter_NoteToVdif.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Adapter_NoteToVdifTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AddendumRelatedListController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AddendumRelatedListControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AddPatientController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AddPatientControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AddPatientModule.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AddPatientModuleTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_addRemovePermissionSets.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_addRemovePermissionSetsTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AddSignersControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AddSignersRequestTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AllergyController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AllergyControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AllergyLightningRequestWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AllergyListController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AllergyListControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AllergyModal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AllergyResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AllergyService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AllergyServiceUnitTests.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AnnouncementController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AnnouncementControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AnnouncementSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AnnouncementService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ApiProxy.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ApiProxyTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_APIService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_APIServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ApiSettingUtility.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointementController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointementControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentDataBatchDelete.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentDataBatchDeleteTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentDataSchedulable.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentDataSchedulableTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentLightningRequestWrp.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentModal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentSchedulingAccessCheck.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentSchedulingAccessCheckTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentSlotUtilBatch.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentSlotUtilBatchTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentSlotUtilLogic.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentSlotUtilLogicTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentSlotUtilSchedule.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_AppointmentSlotUtilScheduleTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BaseClient.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BaseLightningRequestWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BaseResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BaseResponseWrpTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BaseRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BaseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BatchExecutionerTestImplementation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BatchExecutionerTestImplTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BatchMPICorrelate.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BatchMpiCorrelateHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BatchMPICorrelateScheduler.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BatchMPICorrelateTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAdditionalSignersRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAdditionalSignersRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAdditionalSignersRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAdditionalSignersRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAllergyRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAllergyRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAllergyRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAllergyRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAppointmentsRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAppointmentsRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAppointmentsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgAppointmentsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgClient.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgClientTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgConsultsRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgConsultsRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgConsultsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgConsultsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgDemographicsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgDemographicsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgFlagsRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgFlagsRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgFlagsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgFlagsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgImmunizationRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgImmunizationRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgImmunizationRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgImmunizationRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgLabsRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgLabsRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgLabsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgLabsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgMedsResponseParser.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgMedsResponseParserTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgMedsRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgMedsRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgMedsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgMedsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgNotesRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgNotesRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgNotesRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgNotesRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgOrdersRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgOrdersRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgOrdersRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgOrdersRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgProblemsRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgProblemsRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgProblemsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgProblemsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgProxy.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgProxyTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgRadiologyExamsRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgRadiologyExamsRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgRadiologyExamsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgRadiologyExamsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgRequest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgRequestTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgRSCommon.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgRSCommonTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgVisitsRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgVisitsRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgVisitsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgVisitsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgVitalsRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgVitalsRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgVitalsRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_BridgVitalsRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Bridg_AdditionalSignersRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_bsContingency.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_bsContingencyTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CalloutDataDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CalloutDataDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CalloutDataService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CalloutDataServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseMetricLogic.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseMetricLogicTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseModal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseModalTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CaseValidationTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Case_PreventOwnerChange.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Case_PreventOwnerChangeTestClass.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CDWIntegrationUserTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CHROVVSAppointmentInvocable.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CHROVVSAppointmentInvocableTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ClinicByNameMockRSTransformer.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ClinicByNameMockRSTransformerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ClinicByProviderMockRSTransform.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ClinicByProviderMockRSTransTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ClinicGroupSearchController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ClinicGroupSearchControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ClinicSearchController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ClinicSearchControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CmopLogRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CmopLogRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CmopLotExpLogRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CmopLotExpLogRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CodeSetSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CodeSetSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CommitFlowTransaction.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CommitFlowTransactionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ConsultController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ConsultControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ConsultLightningRequestWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ConsultModal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ConsultResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ConsultsController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ConsultsControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ConsultService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ConsultServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CopayLogRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_CopayLogRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DatetimeService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DatetimeServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DeceasedPatientController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DeceasedPatientControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DeserializationOutcome.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DeserializationResult.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DeserializationTarget.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Deserializer.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DeserializerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DirectivesController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DirectivesControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DirectivesService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DirectivesServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DischargeSummaryLightningRequestWrp.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DischargeSummaryModal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DischargeSummaryRequestWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DischargeSummaryResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DivaClient.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DivaClientTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DivaRequest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DivaRequestTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DivaResponse.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_DivaResponseTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_E911CaptureCallbackController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_E911CaptureCallbackControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_E911ConfirmLocationController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_E911ConfirmLocationControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_E911IntradoService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_E911IntradoServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_E911ViewCallNumberController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_E911ViewCallNumberControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EcmeLogRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EcmeLogRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EmailNotificationService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EmailNotificationServiceTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EncounterService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EncounterServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointStatusCodeConfigSelector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointStatusCodeConfigSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointStatusCodeRangeSelector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointStatusCodeRangeSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointStatusCodeSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointStatusCodeSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointUtility.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EndpointUtilityTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Enum.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_EnumTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ErxLogRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ErxLogRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ExternalVaLinksController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ExternalVaLinksControllerHelper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ExternalVaLinksControllerHelperTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ExternalVaLinksControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FacilityService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FacilityServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FlagLightningRequestWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FlagModal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FlagResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FlagsController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FlagsControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FlagService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FlagServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Flow_Utilities.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Flow_UtilitiesTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FutureRenewalController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FutureRenewalControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_FutureRenewalService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_GenericBatch.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_GenericBatchTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_GetSudPanelsInvocable.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_GetSudPanelsInvocableTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HDRClient.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HDRClientTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HDRHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HDRHelperTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HDRLogSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HealthcareFacilitySelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HealthcareFacilitySelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HeartbeatTemplate.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HeartbeatTemplateController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HeartbeatTemplateControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HeartbeatTemplateRunner.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HeartbeatTemplateRunnerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HeartbeatTemplateTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HeartbeatUtility.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Hexadecimal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HexadecimalTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HighlightBarController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HighlightBarControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HistoricalVisitsController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HistoricalVisitsControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpCalloutMockFactory.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpHeaderCallingAppName.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpHeaderCallingAppNameTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpHeaderField.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpHeaderFieldTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpHeaderSiteId.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpHeaderSiteIdTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpIntercept_Logging.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpIntercept_LoggingTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpIntercept_Observer.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpIntercept_ObserverTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpMock.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpOverride_Mock.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpOverride_MockTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpRequest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpRequestAction.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpRequestActionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HttpServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_HTTPStatusEnum.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_IdModule.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_IdModuleTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_IdService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_IdServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ImmunizationController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ImmunizationControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ImmunizationLightningRequestWrp.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ImmunizationModal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ImmunizationResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_InpatientResWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_InpatientResWrpTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_IntegrationProcedureUtilities.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_IntegrationProcedureUtilitiesTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_IntegrationTestUtilityService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_IntegrationTestUtilityServiceTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_InternalException.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_InternalExceptionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_InterviewsByRecordController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_InterviewsByRecordController_Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_JsonNoteParser.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_JsonNoteParserTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_JSONUtil.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Lab.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabelLogRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabelLogRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabLightningRequestWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabModal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabModalTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LabTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LayoutService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LayoutServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LogEventDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LogEventDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LogManager.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LogManagerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LogService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LogServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LoincCodeSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LoincCodeSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LongService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LongServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LookupController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LookupControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LookupSearchResult.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LookupSearchResultTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_LWCSObjectRepos.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_lwc_utils.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_lwc_utilsUnitTests.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_lwc_utils_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MainMenuAccessUtility.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MainMenuController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MainMenuControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MainMenuWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MedicationsData.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MedicationsDataTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MedsListController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MedsListControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MedsMockHttpResponse.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MedsService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MedsServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MockHttpRequest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MockHttpResponseGenerator.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MockSSOService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MockSSOServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MockSSOServiceV2.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MockSSOServiceV2Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MockSSOSettingsSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MockSSOSettingsSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ModuleService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ModuleServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ModuleServiceTest_ModuleHappy.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ModuleServiceTest_ModuleSad1.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ModuleServiceTest_ModuleSad2.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ModuleServiceTest_ModuleSad3.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPIFlowAction.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPIFlowActionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPIHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPIHelperTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageConnector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageConnectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageException.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageExceptionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageGetFieldMapping.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageGetFieldMappingTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackagePatientSearch.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackagePatientSearchTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageSaveForm.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageSaveFormTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageSetCorrelation.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageSetCorrelationTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageTrait.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiPackageTraitTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPIParser.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPIParserTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPIRequestFactory.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiRetrieveBatch.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiRetrieveBatchTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiRetrieveLogic.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiRetrieveRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiRetrieveRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiRetrieveRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MpiRetrieveRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPISearchRequest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPISearchRequestTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPISearchResponse.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPISearchResponseTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPI_HTTP.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_MPI_HTTPTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NebulaWrapper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NebulaWrapperTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NebulaWrapperWithTags.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NebulaWrapperWithTagsTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NoResultsException.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NoResultsExceptionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NoteParser.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NoteParserService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NoteParserServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NoteParserTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NoteService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NoteServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NotificationService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_NotificationServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OAuthUtility.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OAuthUtilityTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OmniRemoteAction.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OmniRemoteActionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OrderController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OrderControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OrderLightningRequestWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OrderResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OrgSettingsSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OrgSettingsSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OutputTextUtility.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_OutputTextUtilityTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PACTSerializeRequestToJSON.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PACTSerializeRequestToJSONTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PageRefHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PageRefHelperTests.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PartialsLogRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PartialsLogRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientAdditionalSignersController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientAddSignersControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientAllergy.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientAllergyTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientLabService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientLabServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientMedsService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientMedsServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientSearchControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientSearchTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientServiceV2.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientServiceV2Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientVisit.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientVisitService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientVisitServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientVisitTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientVitalsController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PatientVitalsControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PermissionHelperTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PharmacyLogRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PharmacyLogRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PharmacyLogType.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PhoneDirectorySearchController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PhoneDirectorySearchControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_PnCustomSectionSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProblemController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProblemControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProblemLightningRequestWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProblemModal.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProblemResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNote.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteCaseMetricBatch.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteCaseMetricBatchTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteConfigSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteConfigSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteCustomSectionSelector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteDTO.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteDTOTests.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteJsonModel.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNoteTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNote_PreventSignedDeleteTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNote_PreventSignedDelete_BD.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNote_TextFieldSizeCheckTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNote_TextFieldSizeCheck_BU.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNote_UserLocalTriageDateTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProgressNote_UserLocalTriageDate_BU.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProviderSearchController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProviderSearchControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProviderService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProviderServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProviderServiceV2.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ProviderServiceV2Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_QueryParam.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_QueryParams.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_QueryParamsTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_QuerySelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_QuerySelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_QueueableWithCallback.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_QueueableWithCallbackTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RadiologyController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RadiologyControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RadiologyLightningRequestWrp.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RadiologyResponseWrp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RecentViewHelper.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RecentViewHelperTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RecentViewModule.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RecentViewModuleTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RefillLogRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RefillLogRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RefreshUI_Invocable.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RefreshUI_InvocableTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RemoteServiceException.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_RemoteServiceExceptionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ResetTrainingModeDataBatch.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Result.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ResultTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ScheduleAppointmentController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ScheduleAppointmentControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ScheduleAppointmentRequestController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SchedulingAppointmentReqContrTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SchedulingCasesListController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SchedulingCasesListControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SchedulingOmniConnector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SchedulingOmniConnectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SearchMPISingleVeteran.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SearchMPISingleVeteranTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SecurityService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SecurityServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ServiceAppointmentMetrics.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ServiceAppointmentMetricsTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SignersController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SignersControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SignersSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SignersSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SignersService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SignersServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SignersTriggerHandler.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SignersTrigger_Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SiteId.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SiteIdTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SObjectTest_Callout_Data.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SObjectTest_Test_Run.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SOT_OnboardingActivityTriggerHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SOT_OnboardingActvtyTriggerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SOT_ServiceUserAssignTriggerHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SOT_ServiceUserAssignTrigHandTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_StaticResourceSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_StaticResourceSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_String_Utilities.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_String_UtilitiesTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Stub.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SudService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_SudServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_T2T_Adapter_JSON2Object.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_T2T_Adapter_JSON2ObjectTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_T2T_Adapter_Record2JSON.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_T2T_Adapter_Record2JSONTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TaskController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TaskControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TaskDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TaskDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TaskMedicationController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TaskMedicationControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TaskPreventDeleteBD.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TaskPreventDeleteTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TestConfigurationDataSelector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TestConfigurationDataSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TestDataFactory.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TestRunCalloutService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TestRunCalloutServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TestRunDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TestRunDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TestRunService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TestRunServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TraineeListController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TraineeListControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeAccount.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeAccountSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeAccountSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeAccountTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeData.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeDataDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeDataDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeDataSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeDataSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeDataTemplateSelector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeDataTemplateSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeDataTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeNotificationController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeNotificationContrTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeTestDataFactory.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeUserSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TrainingModeUserSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TransferFDACheckToPicklistValues.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TransferFDACheckToPicklistValuesTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TriageController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_TriageControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UoWDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UoWDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UpdateMeds_Invocable.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UpdateMeds_InvocableTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UrnService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UrnServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UserBuilder.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UserBuilderTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UserDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UserSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UserSelectorTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Util.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_UtilsTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VaProfileAssociatedPersonsRQ.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VaProfileAssociatedPersonsRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VaProfileAssociatedPersonsRS.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VaProfileAssociatedPersonsRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VaProfileController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VaProfileControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VaProfileService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VaProfileServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VatPageController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VatPageControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifBaseRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifClient.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifClientTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifCreateAddendumRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifCreateAddendumRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifCreateAddendumRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifCreateAddendumRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifEncounter.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifEncounterTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifGetAdditionalSignersRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifGetAdditionalSignersRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifGetAdditionalSignersRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifGetAdditionalSignersRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifGetProvidersBySiteRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifGetProvidersBySiteRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifGetProvidersBySiteRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifGetProvidersBySiteRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifIsValidEsigRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifIsValidEsigRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifIsValidEsigRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifIsValidEsigRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifLogger.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifLoggerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifNote.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifNoteParser.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifNoteParserTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifNoteTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifParameters.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifParametersDomain.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifParametersDomainTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifParametersTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifPatient.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifPatientTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifProvider.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifProviderTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifProxy.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifProxyTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueableCallback.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueableCallbackTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_Addendum.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_AddendumTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_Encounter.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_EncounterTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_Esig.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_EsigTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_Sign.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_Signers.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_SignersTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_SignTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_Write.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueable_WriteTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueStratTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueStrat_TestRun.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifQueueStrat_TestRunTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VDIFResponseParser.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifRSCommon.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifRSCommonTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSaveNoteAndEncounterRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSaveNoteAndEncounterRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSaveNoteAndEncounterRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSaveNoteAndEncounterRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSelectPatientRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSelectPatientRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSelectPatientRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSelectPatientRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSignNoteRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSignNoteRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSignNoteRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifSignNoteRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifTestRun_Encounter.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifTestRun_EncTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifTestRun_Note.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifTestRun_NoteTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifWriteNoteRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifWriteNoteRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifWriteNoteRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VdifWriteNoteRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Vdif_Actions.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Vdif_NoteAndEncounterParams.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Vdif_PatientAndProviderParams.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_Vdif_PatientAndProviderParamsTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VetRetrieveResponseMockGenerator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VetRetrieveResponseMockGeneratorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ViewAlerts.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_ViewAlertsTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VISTADataService.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VISTADataServiceTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VistaInstanceToUserDUZSelector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VistaInstanceToUserDUZTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VISTAModel.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_VISTAModelTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_WorkstreamSettingsController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_WorkstreamSettingsControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_WorkstreamSettingsSelector.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_WorkstreamSettingsSelectorTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_WrapperWithKeyword.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/VCC_WrapperWithKeywordTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DAS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASBaseRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASBaseRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASConsolidatedEndpointBaseRQ.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASConsolidatedEndpointBaseRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASConsolidatedEndpointException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASConsolidatedEndpointExceptionTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASController.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASControllerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumAndSignFailureRS.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumAndSignRQ.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumAndSignRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumAndSignSubflowTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumAndSignSuccessRS.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumSignFailureRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASCreateAddendumSignSuccessRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASException.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASExceptionTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowConsolidatedEndpointResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowConsolidatedEndpointResulTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowCreateAddendum.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowCreateAddendumAndSign.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowCreateAddendumAndSignTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowCreateAddendumTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowGenerateEncounterString.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowGenerateEncounterStringTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowGetAdditionalSigners.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowGetAdditionalSignersTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowIsValidEsig.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowIsValidEsigTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowSaveNoteAndEncounter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowSaveNoteAndEncounterTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowSelectPatient.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowSelectPatientTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowSignNote.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowSignNoteTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowWriteNote.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowWriteNoteAndSign.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowWriteNoteAndSignTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASFlowWriteNoteTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASGetAdditionalSignersRQ.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASGetAdditionalSignersRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASGetAdditionalSignersRS.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASGetAdditionalSignersRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASIsValidEsigRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASIsValidEsigRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASIsValidEsigRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASIsValidEsigRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASLogger.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASLoggerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASProgressNoteController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASProgressNoteControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASRSCommon.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASRSCommonTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSaveNoteAndEncounterRQ.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSaveNoteAndEncounterRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSaveNoteAndEncounterRS.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSaveNoteAndEncounterRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSelectPatientRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSelectPatientRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSelectPatientRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSelectPatientRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceApi.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceApiTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceEncounter.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceEncounterTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceEndpoint.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceEndpointTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceHttp.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceHttpTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceLogger.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceLoggerTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceMetadata.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceMetadataTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceParser.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceParserTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServices.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServicesTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceUtilities.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASServiceUtilitiesTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSignNoteRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSignNoteRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSignNoteRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSignNoteRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASSignNoteSubflowTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASStub.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteAndSignRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteAndSignRQTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteAndSignTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteRQ.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteRQTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteRS.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteRSTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteSignFailureRS.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteSignFailureRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteSignSuccessRS.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_DASWriteNoteSignSuccessRSTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_HttpHeaderB3.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_HttpHeaderB3Test.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_HttpHeaderConversationId.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_HttpHeaderConversationIdTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_TransactionId.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCC_TransactionIdTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCR_ProgressNoteCustomSectionRepo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/DAS/VCR_ProgressNoteCustomSectionRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Exceptions/VCC_InvalidArgumentException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/HealthDataControllers/VCC_DischargeSummaryController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/HealthDataControllers/VCC_DischargeSummaryControllerTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/VCC_RepeatingRule.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/VCC_RepeatingRuleTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_DateRange.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_DateRangeTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TerritoryMemberKey.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TerritoryMemberKeyTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TerritoryMemberToAppointmentsMap.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TerritoryMemberToAppointmentsMapTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TerritoryMemberToTimeSlotMap.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TerritoryMemberToTimeSlotMapTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TimeSlot.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TimeSlotCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TimeSlotCollectionTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TimeSlotTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TwoTuple.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/DataStructures/VCC_TwoTupleTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_AppointmentUtilizationService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_AppointmentUtilizationServiceTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_AppointmentUtilQueueable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_AppointmentUtilQueueableService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_AppointmentUtilQueueableServiceTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_AppointmentUtilQueueableTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_AppointmentUtilSchedulable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_AppointmentUtilSchedulableTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_OperatingHoursHolidayService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/VCC_OperatingHoursHolidayServiceTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/Helpers/VCC_HolidayServiceHelper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Scheduling/Services/Helpers/VCC_HolidayServiceHelperTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Utils/VCC_ExceptionUtils.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCC/Utils/VCC_ExceptionUtilsTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AccountRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AddressRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AgentWorkRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AlertRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AllergyRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AppointmentRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AppointmentRequestRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AppointmentScheduleAggrRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AppointmentSlotConfigRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AppointmentsRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AppointmentUtilizationRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_AsyncApexJobRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_bsConfigurationsAssignedUserRepo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_CaseMetricRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_CaseRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ClinicGroupRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ClinicRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ClinicScheduleSlotRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ConsultRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ContactRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_DirectivesRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_DischargeSummaryRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_E911MetricsRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ExternalVaLinksRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_FeedItemRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_HealthDataRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_IAMSSOiVistaInstToUserDUZRepo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ImmunizationsRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_LabRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_LocationRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_OperatingHoursHolidayRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_OperatingHoursRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_OrderRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_OrgRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_PermissionSetAssignmentRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_PermissionSetRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_PharmacyRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ProblemRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ProgressNoteRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ProviderClinicAssignmentRepo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ProviderRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_PushTopicRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_RadiologyRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_RecordTypeRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ResourceAbsenceRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_SerializableQueryLocatorChunk.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ServiceAppointmentMetricsRepo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ServiceAppointmentRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ServiceChannelRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ServiceResourceRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ServiceResourceSkillRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ServiceTerritoryMemberRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_ShiftRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_SkillRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_SSOMockingRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_StaticResourceRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_TaskRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_UserRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_UserServicePresenceRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_UserUIEventRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_VAFAddressRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_VAHCe911CustomSettingRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_VaIdentityRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_VisitRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/VCR_VitalsRepo.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/Action.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/Component.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/ComponentIteration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/HammerProcessor.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/IdeaStandardController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/IdeaStandardSetController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/KnowledgeArticleVersionStandardController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/Message.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/PageReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/SelectOption.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/Severity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/StandardController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ApexPages/StandardSetController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/AccountSettingsController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/AppLauncherHelper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/AppLauncherSetupReordererController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/AppMenu.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/ChangePasswordController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/CommerceStoreController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/CommunityLogoController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/EmployeeLoginLinkController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/ForgotPasswordController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/IdentityHeaderController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/LoginFormController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/SelfRegisterController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/AppLauncher/SocialLoginController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Approval/LockResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Approval/ProcessRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Approval/ProcessResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Approval/ProcessSubmitRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Approval/ProcessWorkitemRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Approval/UnlockResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/AuthConfiguration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/AuthProviderCallbackState.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/AuthProviderPlugin.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/AuthProviderPluginClass.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/AuthProviderPluginException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/AuthProviderTokenResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/AuthToken.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/C2CToken.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/CommunitiesUtil.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/ConfigurableSelfRegHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/ConfirmUserRegistrationHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/ConnectedAppPlugin.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/ConnectedAppPluginException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/CustomOneTimePasswordDeliveryHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/CustomOneTimePasswordDeliveryResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/DiscoveryCustomErrorException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/ExternalClientAppOauthHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/HeadlessSelfRegistrationHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/HeadlessUserDiscoveryHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/HeadlessUserDiscoveryResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/HttpCalloutMockUtil.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/IntegratingAppType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/InvocationContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/JWS.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/JWT.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/JWTBearerTokenExchange.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/JWTUtil.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/JWTValidationException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/LightningLoginEligibility.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/LoginDiscoveryException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/LoginDiscoveryHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/LoginDiscoveryMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/MyDomainLoginDiscoveryHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/Oauth2TokenExchangeHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/OAuth2TokenExchangeType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/OAuthRefreshResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/OauthToken.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/OauthTokenType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/RegistrationHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/SamlJitHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/SessionLevel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/SessionManagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/ThirdPartyAccountLinkInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/TokenValidationResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/UserData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/UserOrgInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/VerificationAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/VerificationException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/VerificationMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/VerificationPolicy.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Auth/VerificationResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/BulkApiKeysLimitExceededException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/CacheBuilder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/CacheBuilderExecutionException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/CacheException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/ExecutionException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/InvalidCacheBuilderException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/InvalidParamException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/ItemSizeLimitExceededException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/Org.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/OrgPartition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/Partition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/PlatformCacheDelegateWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/PlatformCacheInvalidOperationException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/ScanResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/SecondaryKeyApi.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/Session.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/SessionPartition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/UnsupportedOperationException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Cache/Visibility.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Canvas/ApplicationContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Canvas/CanvasLifecycleHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Canvas/CanvasRenderException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Canvas/ContextTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Canvas/EnvironmentContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Canvas/RenderContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Canvas/Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ChatterAnswers/AccountCreator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ChatterAnswers/ChatterServiceRegisterController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ChatterAnswers/SCCChangePasswordController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ChatterAnswers/SCCForgotPasswordConfirmController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ChatterAnswers/SCCForgotPasswordController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceExtension/ApexMethodRequestCallbacksTestObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceExtension/ExtensionInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceExtension/ExtensionInit.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceExtension/Resolution.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceExtension/ResolutionException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceExtension/ResolutionStates.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceExtension/ResolutionStrategy.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceOrders/CatalogRatesPreferenceEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceOrders/ConfigurationInputEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceOrders/ConfigurationOptionsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceOrders/GraphRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceOrders/PlaceOrderExecutor.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceOrders/PlaceOrderResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceOrders/PricingPreferenceEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceOrders/RecordResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceOrders/RecordWithReferenceRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AbstractResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AbstractTransactionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AddressRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AlternativePaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AlternativePaymentMethodResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AuditParamsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AuthApiPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AuthorizationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AuthorizationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AuthorizationReversalRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/AuthorizationReversalResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/BaseApiPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/BaseNotification.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/BasePaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/BaseRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/CaptureNotification.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/CaptureRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/CaptureResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/CardCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/CardPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/CardPaymentMethodResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/CardType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/ClientRequestContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/ClientResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/ClientSidePaymentAdapter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/CustomMetadataTypeInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/GatewayErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/GatewayNotificationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/NotificationClient.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/NotificationSaveResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/NotificationStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentGatewayAdapter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentGatewayAsyncAdapter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentGatewayContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentGatewayNotificationContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentGatewayNotificationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentMethodDetailsResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentMethodTokenizationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentMethodTokenizationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentsApiException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PaymentsHttp.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PostAuthApiPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PostAuthorizationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/PostAuthorizationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/ProductItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/ReferencedRefundNotification.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/ReferencedRefundRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/ReferencedRefundResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/RefundRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/RequestType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/SaleApiPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/SaleRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/SaleResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/SalesforceResultCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommercePayments/SalesforceResultCodeInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/AbstractTransactionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/AddressesResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/AddressResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/AmountDetailsResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/CalculateTaxRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/CalculateTaxResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/CalculateTaxType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/ErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/HeaderTaxAddressesRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/ImpositionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/JurisdictionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/LineItemResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/LineTaxAddressesRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/RequestType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/ResultCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/RuleDetailsResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxAddressesRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxAddressRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxApiException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxCustomerDetailsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxDetailsResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxEngineAdapter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxEngineContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxLineItemRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxSellerDetailsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxTransactionRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxTransactionStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/CommerceTax/TaxTransactionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Compression/Helper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Compression/Level.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Compression/Method.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Compression/ZipEntry.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Compression/ZipException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Compression/ZipReader.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Compression/ZipWriter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ABnExperimentActionEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractAchievementMapping.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractCartItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractCheckoutAddressInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Abstractcommerceproductsearchresults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractContentHubItemType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractCreateServiceAppointmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractDirectoryEntrySummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractExtensionInformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractGatewayCommonResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractGatewayResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractManagedContentChannelRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractManagedContentDeliveryDocument.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractManagedContentReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractMessageBody.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractNBAAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractNBATarget.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractProductAttributeSetSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractProductSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractRecommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractRecommendationExplanation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractRecordView.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractRepositoryFile.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractRepositoryFolder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractRepositoryItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSearchSuggestion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryAggregatePredictionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryAIModelMetrics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryAIModelSource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryAssetReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryFieldMappingSource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryManyToOneTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryModelField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryModelRuntime.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryModelRuntimeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryOneToOneTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryPredictConditionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryPredictInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryPredictionProperty.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryPredictRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryProjectedPrediction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryProjectedPredictionsIntervalSetting.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryProjectedPredictionsIntervalSettingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryTransformationFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryTransformationOverride.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractSmartDataDiscoveryTransformationOverrideInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AbstractUserMissionActivity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AccountSyncToExternalInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AccountSyncToExternalOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AchievementContributor.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AchievementContributorTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AchievementMappingTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceErrorDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceRecordError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceRule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceRuleCondition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceStep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceStepVariant.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceV2Upsert.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceV2UpsertRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionCadenceV2UpsertResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionEntityRefInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionInfoInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionInfoOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLauncherIntentActionsMappingOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLauncherRecommendationsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLinkDefinition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLinkDefinitionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLinkDiagnosticInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLinkExecutionsAllowed.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLinkGroupDefinition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLinkGroupDefinitionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLinks.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLinkTemplateBindingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActionLinkType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationContactPointFieldConfigRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationContactPointSourceConfigRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationContactPointSourceConfigRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationDataSourceConfig.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationTarget.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationTargetCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationTargetInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationTargetStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivationTargetSubject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivitySharingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivitySharingResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActivitySharingType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Actor.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ActorWithId.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AddItemAdjustmentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AddItemOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AddItemTaxOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdditionalFieldIARep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdditionalFieldsMapValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdditionalTransactionJournalAttributeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AddOrderItemSummaryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AddOrderToCartInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Address.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AddressDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AddressRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AddressResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdjustItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdjustmentAmountScope.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdjustmentType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdjustOrderItemSummaryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdjustOrderSummaryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdOpportunityObjectiveInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdOpportunityTargetValueInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdQuoteLineAdSpaceCreativeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdQuoteLineAdSpaceCreativeInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdQuoteLineAdSpaceCreativeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdQuoteLineAdSpaceSpecInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdQuoteLineAdSpaceSpecInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdQuoteLineAdSpaceSpecOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdQuoteLineCreativeSizeTypeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdQuoteLineCreativeSizeTypeInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdQuoteLineCreativeSizeTypeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AdvancedTherapyManagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AgreementInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AgreementItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AgreementItemOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AgreementOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AgreementPeriodOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AgreementSpecificationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AgreementSpecificationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AiAcceleratorConnectFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AIFieldRecommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AIFieldRecommendationCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AIFieldRecommendationValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AIModelVisibilityEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Alternative.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AlternativeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AlternativePaymentMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AlternativePaymentMethodOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AmendInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AmendRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AnalysisFieldDataPropertyEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AnalyticsLicenseAttributes.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AnalyticsLicenseType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Announcement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AnnouncementInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AnnouncementPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Announcements.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApexClassInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApexClassOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApiErrorCodeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApiResponseStatusCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApiStatusOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AppFormContentDocumentResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AppFormContractDocuments.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AppFormContractDocumentVersionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AppFormProductContractDocuments.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicantInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicantResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicantWrapperInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicantWrapperResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Application.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormAccountAddress.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormAccountInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormProductInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormProductResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormProductWrapResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormSellerItemInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationFormSellerItemResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationSettingsCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplicationsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AppliedCreditResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplyCreditResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApplyCreditResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AppointedRepresentativeOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AppointmentSlotResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AppointmentSlotStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AppointmentSlotStatusResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApprovalAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApprovalCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApprovalIntent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ApprovalPostTemplateField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArcBaseErrorRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArcBaseInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArcRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleFeedbackInvitationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleFeedbackQuestionResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleFeedbackResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleRecommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleRecommendationCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleRecommendationsChannelType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleRecommendationsRuntimeMetric.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleRecommendationsRuntimeMetrics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleSmartAnswer.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleTopicAssignmentJobInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ArticleTopicJobType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssessmentSearchDerivedStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssetMgmt.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssetMgmtAmendmentType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssetMgmtARCActionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssetMgmtCancellationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssetMgmtInitiateAmendQtyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssetMgmtInitiateCancellationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssetMgmtInitiateRenewalInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssetMgmtReturnPolicyType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssetRevertHistoryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssignedResourcesInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssociatedActionsCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssociatedActionsCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssociatedAgreementOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AssociateRecordsWithRecipientInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AsyncOperationStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AsyncOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AttachmentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AttributeCreationStrategyEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AttributeFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AttributeFilterExpression.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AttributeFilterExpressionValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AttributeFilterValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AttributeRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Attributes.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AttributeSetInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AttributesValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Audience.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceCriteria.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceCriteriaDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceCriteriaInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceCriteriaOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceCriteriaType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceCriterionDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceCriterionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceCriterionValueInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceDMOCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceDMODeltaType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceTarget.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AudienceTargetAssignment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AuditParamsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AuthApiPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AuthorizationGatewayResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AuthorizationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AuthorizationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AuthorizationReversalRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AuthorizationReversalResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AuthReversalGatewayResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AutoFillFormDataOutputListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AvailabilityStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AvailableLocationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/AverageDistanceResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BadgeRewardsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BalanceStatePreviewOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BannerCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BannerPhoto.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BannerPhotoInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BannerStyle.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BaseApiPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BaseAsyncOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BaseComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BaseEndpointExtension.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BaseInvoiceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BaseManagedSocialAccount.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BaseOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BasePaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BaseRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BasicTemplateAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchAuthorizationPaymentsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchBasePaymentsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchCapturePaymentsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchCriteriaFieldsForInvoiceRunEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchCriteriaObjectsForInvoiceRunEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchCriteriaOperationEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchFilterCriteriaInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchInvoiceApplication.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchInvoiceFilterCriteriaInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchInvoiceSchedulerInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchInvoiceSchedulerResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchInvoiceStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchPaymentsItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchPaymentsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchSalePaymentsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BatchSchedulerStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BenefitDisbursementsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BenefitDisbursementsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BenefitScheduleParticipantsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BenefitScheduleParticipantsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BenefitSessionParticipantsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BenefitSessionParticipantsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BenefitSessions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Billing.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingAddressRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingBatchSchedulerResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingFrequency.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingMethodEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingScheduleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingScheduleRecoveryInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingScheduleRecoveryResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingScheduleRecoveryResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingScheduleStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BillingTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BinaryInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BlankRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BlockchainConfig.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BlockchainConfigObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BookAppointmentResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BookAppointmentsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BookingStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BookmarksCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BookmarksCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BookmarkSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BookMultiSlotResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BookSlotChainInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BookSlotChainResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BooleanComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BooleanList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BotInfoRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BotLLMPromptTemplateType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BotLLMProviderType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BotRuntimeApi.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BotRuntimeApiInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BotVersionActivation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BotVersionActivationInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BotVersionActivationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BotVersionActivationStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BrandExtractionResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BrandExtractionResultOutputRepresentationLogo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BrandExtractorQueryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BrandingSetInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BrandingSetOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BreGuardrailFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BreGuardrails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BreGuardrailsResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BroadcastResponseAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BuildVerificationContextInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BulkPolicyRenewalInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BulkReassignmentListResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BulkReassignmentOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BulkReassignmentResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BulkUpdateErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BundleCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BundleType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusinessObjectivesInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusinessObjectivesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusinessObjectivesSummaryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusObjAssociationsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusObjAssociationsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusObjInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusObjInsightsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusObjInsightsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusObjOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusObjRecommendationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusObjRecommendationsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BusObjSummaryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BuyerPaymentMethodSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BuyerProductSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BuyerProfileDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/BuyerProfileInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CalculateCartInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CalculateCartResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CalculatedInsightDefinitionTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CalculatedInsightPublishScheduleInterval.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CalculateProjectedRebateAmountOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CalculateTaxRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CalculateTaxResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CalculateTaxTypeRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CallCollaborationCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CalloutStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CampaignDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CampaignOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CampusSetup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelAllAppointmentsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelAllAppointmentsResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelAllOrderItemsAsyncOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelAllOrderItemsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelAppointmentResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelAppointmentsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelPolicyIAInputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelPolicyIAOutputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelPolicyInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelPolicyOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelSlotChainInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CancelSlotChainOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CandidateAnswersStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CanvasAttachmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CanvasCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CanvasCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CanvasTemplateAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CapacityRequestInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CapacityResponseOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaptureGatewayResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaptureRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaptureResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CardCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CardDetailOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CardOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CardPaymentMethodOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CardPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CardRowOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CardType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareAuthorizationCaseOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareAuthorizationOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareAuthorizationOutputResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareAuthorizationPatientOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareAuthorizationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareAuthorizationRequestGetResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareAuthorizationRequestRelatedRecordResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareAuthorizationRequestResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareDiagnosisOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareProcessingErrorOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareProviderResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareRequestDrugOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareRequestItemOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareRequestOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CareRequestReviewerOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartCoupon.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartCouponCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartCouponInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartCouponList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartEvaluateShippingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartEvaluateTaxInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartInventoryItemReservationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartInventoryReservationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartInventoryReservationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemBasic.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemBasicResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemProduct.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemPromotionCollectionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemPromotionCollectionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemPromotionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemSortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartItemWithoutPrice.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartMessage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartMessageSeverity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartMessagesSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartMessagesVisibilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartMessagesVisibilityResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartProductAttribute.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartPromotionCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartPromotionList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartPromotionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartPromotionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartShippingAddressInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartTaxType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartToExchangeOrderOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartToWishlistInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartToWishlistResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CartType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseActorType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseComment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseCommentCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseCommentEventType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseFileProcessExecution.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseInfoWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseParticipantInfoWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseProgramsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseProgramsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CaseRelatedFile.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CategoryAndParentErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CategoryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpActionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpAssetBase.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpAssetBaseInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpAssetReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpAssetReferenceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsight.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightDataSource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightDimension.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightErrorResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightMeasure.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightPageData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightStandardActionResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpCalculatedInsightValidateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpDataSpace.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpDataTransformActionRunResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpDgMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolution.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionConfigInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionConfigPatchInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionConfigurationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionMatchCriterion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionMatchCriterionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionMatchCriterionPartyIdentificationInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionMatchCriterionPartyIdentificationInfoOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionMatchMethodType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionMatchRule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionMatchRuleOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionPublishOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionReconciliationFieldRule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionReconciliationFieldRuleOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionReconciliationRule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionReconciliationRuleOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionReconciliationRuleType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionReconciliationSource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionReconciliationSourceOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionRunNowInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionRunNowOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionRunNowResultCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpIdentityResolutionsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMachineLearning.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlActivePartitionTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlAggregatePredictCondition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlAggregatePrediction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlBasePredictInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlBinaryClassificationPredictionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlConfiguredModelStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlConfusionMatrixMetric.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlConfusionMatrixMetricPerClass.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlCustomizableFieldTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlFieldDataTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlFieldValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlFilterFieldTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlFilterValueTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlFoundationalModelMainVersionEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlGenericPredictionOutputValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlGenericPredictionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlLiveMetricTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlMetricAssetTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlMetricSpanEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlModelArtifactRuntimeTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlModelPredictionTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlMulticlassClassificationPredictionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictAggregateFunctionStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictAggregateFunctionTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictionBase.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictionContribution.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictionContributionBase.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictionContributionField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictionError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictionErrorCodeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictionFieldCustomText.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictionSuccessBase.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictionWarnings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictSettingsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictSingleRecordOverridesInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlPredictTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlRawDataPredictInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlRecordOverridesPredictInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlRecordsPredictInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlRegressionPredictionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpMlTransformationTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpPaginatedResponseBase.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpQuery.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpQueryDataGraphMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpQueryDataOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpQueryInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpQueryMetadataItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpQueryMetadataOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpQueryOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpQueryOutputV2.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpQueryV2Row.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentActionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentActionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentContainerOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentDbtInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentDbtModel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentDbtModelInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentDbtPipeline.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentEinsteinGptSegmentsUI.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentLookalike.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentLookalikeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentMembershipTableOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpSegmentOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpStringListObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CdpUser.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChangeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChangeItemFeeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChangeItemFeeTaxInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChangeItemFeeWithTaxInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChangeItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChangeItemOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChangeOrdersInvoiceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChangeType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Chatter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterActivity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterActivitySummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterConversation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterConversationPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterConversationSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterFavorites.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterFeeds.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterGroupDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterGroupInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterGroupPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterGroups.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterGroupSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterLike.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterLikePage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterLikesCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterMessage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterMessagePage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterMessages.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterStream.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterStreamInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterStreamPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChatterUsers.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CheckoutSessionState.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CheckProductOfferingOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CheckProductOfferingQualificationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CheckProductOfferingQualificationItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CheckProductOfferingQualificationItemOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CheckProductOfferingResponseOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChimeAttendeeResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChimeMediaPlacementResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ChimeMeetingResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ClassificationsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ClientInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Clm.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ClonePromotionConnect.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CloseCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CloseCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CmsWorkspaceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CmsWorkspacesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CodeableConceptOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CodingOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Column.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Comment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommentCapabilities.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommentCapabilitiesInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommentPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommentsCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommentSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommentType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceActionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceAddressCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceAddressFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceAddressInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceAddressOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceAddressSort.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceBuyerExperience.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceCart.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceCatalog.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceCatalogAttributeType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceCatalogManagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceCloudConnector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceEinsteinActivityJobStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceEinsteinConfiguration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceEinsteinOutputConfiguration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceEinsteinStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceExtensionDx.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceInventory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceInventoryPricing.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceProductAttributeSetSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceProductSearchResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceProductSellingModel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceProductSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceProductSummaryPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommercePromotions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceResultRepresentationBase.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearch.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchAttributeType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchConnectFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchFacetDisplayType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchFacetType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchGroupingOption.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchIndex.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchIndexBuildType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchIndexCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchIndexCreationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchIndexErrors.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchIndexLog.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchIndexLogCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchIndexStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchIndexUsage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchSortRuleDirection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchSortRuleType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSearchTopProductType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceStorefrontContextOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceStorefrontContextProductCategoryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceStorefrontContextSearchLiveIndexSnapshotOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceStorePricing.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSubscription.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSubscriptionBillingSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSubscriptionCancelInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSubscriptionCancelOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSubscriptionCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSubscriptionDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSubscriptionSavedPaymentMethodInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceSubscriptionSortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommerceWishlist.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommitmentPaymentUpdatesInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommitmentPaymentUpdatesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommitmentPaymentUpdatesRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommitmentPaymentUpdatesResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommitmentPaymentUpdatesResponseLink.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommsAgreementManagementAPI.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommsOpenApi.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Communities.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Community.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityFlagReasonType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityFlagType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityFlagVisibility.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityLanguage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityModeration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityPublish.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunitySummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityTemplate.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CommunityTemplates.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompanionAdQuoteLineCreativeSizeTypeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompanionAdQuoteLineCreativeSizeTypeInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompanionAdQuoteLineCreativeSizeTypeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompanyVerifySummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplaintInfoWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplaintMgmtOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplaintMgmtRequestInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplexSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceControlEvaluation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceControlLoggingStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceControllogValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceControlStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceLoggingBusinessContextEvidenceValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceLoggingInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceLoggingResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceLoggingResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceProcedureBusinessContextGenericValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceProcedureEvaluation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceProcedureEvaluationInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceProcedureEvaluationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceProcedureEvaluationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ComplianceProcedureStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompositeCommerceProductBaseInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompositeCommerceProductInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompositeCommerceProductOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompositeCommerceVariationAsyncOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompositeCommerceVariationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompositeCommerceVariationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompositeErrorResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompositeVariationAsyncTaskDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CompoundRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConcreteAchievementMapping.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConfigOptionsNode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConfiguratorSaveRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConfirmHeldFOCapacityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConfirmHeldFOCapacityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConfirmHeldFOCapacityRequestInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConfirmHeldFOCapacityResponseOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectApiException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectCommerceSearchSortRuleLabelSuffix.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectCommerceSearchSortStandardField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectInsightUnitEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectionSchemaActionResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectionSchemaTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectManagedContentChannelType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectManagedContentDeploymentType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectManagedContentMediaType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectManagedContentNodeType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectManagedContentSpaceChannelOperationEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectManagedContentSpaceChannelStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectSitesPageType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectStatusCheckType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectUtilities.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConnectWaveSortOrderEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContactMediumCharacteristicInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContactMediumInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContactMediumOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContactPointConfigRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContactPointConfigRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContactPointFilterExpressionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContactPointFilterExpressionRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Content.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentAttachmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentDocumentListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentDocumentOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentDocumentResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHub.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubAllowedItemTypeCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubAuthenticationProtocol.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubDirectoryEntryType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubExternalItemSharingType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubFieldDefinition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubFieldValueInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubGroupType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubItemInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubItemType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubItemTypeDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubItemTypeSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubPermission.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubPermissionCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubPermissionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubProviderType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubRepository.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubRepositoryAuthentication.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubRepositoryCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubRepositoryFeatures.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubStreamSupport.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentHubVariableType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentImageFile.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContentImageFileDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContextDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContextInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContextRules.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContextScopeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContextSupertype.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContextTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContextualDataInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContractDocumentVersionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContractDocumentVersionReviewerOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContractDocumentVersionReviewersListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContractDocumentVersionsListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContractInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ContractOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConversationApplicationDefinition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConversationApplicationDefinitionDetailRespresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConversationApplicationIntegrationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConversationReasonChannelType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConversationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConversationResponsesCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConversationRuntimeProxyMessageType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConversationRuntimeProxyMessageWidget.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConversationRuntimeProxyRequestType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConvertNegativeInvoiceLinesInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ConvertNegativeInvoiceLinesResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CorePricingResultErrorRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CorePricingResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CorePricingStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CorporateMemberInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CorporateMemberOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CouponCodeRedemptionCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CouponCodeRedemptionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CouponCodeRedemptionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQAttributeCategoryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQAttributePickListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQAttributePickListValueOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQCatalogOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQCategoryDetailsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQCategoryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQFacetValueRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQItemProductOfferingInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CpqMessageOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQPricingModelOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductAttributeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductClassificationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductComponentGroupOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductDetailsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductPricesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductQuantityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductRelatedComponentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductSellingModelOptionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductSellingModelOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductSpecificationRecordTypeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQProductSpecificationTypeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQQualificationContextOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQSearchProductsFacetRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CPQSearchProductsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateAppFormPartyFinancialAssetOutputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateAppFormPartyFinancialLiabilityOutputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateAppFormPartyIdentityVerificationOutputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateApplicationFormApplicantOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateApplicationFormDetailsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateApplicationFormInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateApplicationFormOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateApplicationFormProductOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateApplicationFormResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateCommitmentInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateCommitmentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateCommitmentRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateCommitmentResponseDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateCommitmentResponseLink.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateContractDocumentVersionReviewOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateCredentialAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateCreditMemoInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateCreditMemoOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateGiftInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateGiftOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateGiftRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateGiftResponseDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateGiftResponseLink.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateInvoiceFromChangeOrdersInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateLearningInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateLearningOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateLearningsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateLearningsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateLineItemConfigurationOptionsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateLineItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateLineItemInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateLineItemMapObjectInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateLineItemMapsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateMultipleInvoicesFromChangeOrdersInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateMultipleInvoicesFromChangeOrdersOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateOrderPaymentSummaryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateOrderPaymentSummaryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreatePatientResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateRevenueElementRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateServiceAppointmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreateServiceAppointmentResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Credential.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CredentialAuthenticationProtocol.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CredentialAuthenticationProtocolVariant.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CredentialAuthenticationStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CredentialCustomHeader.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CredentialCustomHeaderInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CredentialInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CredentialPrincipalType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CredentialValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CredentialValueInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditDetailsApplyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditInvoiceInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditInvoiceInvoiceLine.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditInvoiceInvoiceLineTax.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoAddressesInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoApply.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoApplyInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoBaseInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoLineAppliedResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoLineApply.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoLineApplyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoLineUnappliedResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoLineUnapplyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CreditMemoUnapplyInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CriteriaGroupInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CriteriaInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CrmConnectionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CrmConnectionInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CurrencyRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CurrentValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CustomerManagementInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CustomerManagementOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CustomFieldDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CustomFieldsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CustomFieldsResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CustomListAudienceCriteria.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CustomListAudienceCriteriaInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CycleDetectionInputRequestRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/CycleDetectionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DaoObjectFieldTypeQueryEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DashboardComponentAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DashboardComponentSnapshot.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DashboardComponentSnapshotCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataActionFilterOperationEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataActionStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataActionStatusErrorCodeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataActionTargetStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataActionTargetStatusErrorCodeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataActionTargetSubTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataActionTargetTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataCategoryGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataCategoryGroupCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataCategoryMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataCategoryValueMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Datacloud.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudCompanies.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudCompany.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudCompanyIdentifier.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudContact.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudContacts.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudImport.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudImportStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudImportStatusType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudInternalCompany.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudOrderInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudPurchaseUsage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DatacloudUserType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataConnectionStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataConnector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataConnectorInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataConnectorType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataEnrichmentDeployStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataEnrichmentStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataExportRefreshModeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataExportRunStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphIdsDmo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphIdsDmoField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphObjectData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphObjectTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphRelationship.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphSourceObjectStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphSourceObjectType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphValuesDmo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataGraphValuesDmoField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitBundleConnectorTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitComponentTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployBundleConfig.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployBundleConfigCommerce.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployBundleConfigConnectorFramework.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployBundleConfigCrm.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployBundleConfigForExternal.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployBundleConfigIngestApi.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployBundleConfigStreamingApp.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployComponent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployComponentConfig.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployComponentConfigBundle.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployComponentConfigCalculatedInsightInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployComponentConfigDataTransformInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployComponentConfigDlo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployComponentConfigIdentityResolutionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitDeployComponentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataKitStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataModel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataProviderCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataProviderNode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataProviderSchema.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceFilterConditionApiConfig.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceFilterConditionApiConfigValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceFilterConditionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceFilterConditionOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceFilterConditionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceFilterInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceFilterInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceFilterOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceFilterRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceInfoRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceMemberCollectionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceMemberCollectionInputValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceMemberCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceMemberErrorRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceMemberInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceMemberPutCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceMemberRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpacePatchInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataSpaceStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DataStreamTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DateComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DateEstimationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DateOnlyComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DateRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DayCapacity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DayOfWeekEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DayWiseSlot.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisioningContextInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisioningInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisioningPersonalizationDataRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisioningPersonalizationDiagnosticsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisioningPersonalizationPointInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisioningPersonalizationRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisioningRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionStateEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableCollectOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableCondition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableConditionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableDataOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableDataType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableFileOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableHitPolicy.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableOperatorString.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableOutcome.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableOutcomeItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableParameterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableParameterOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableParameterType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableSortType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableSourceConditionValueType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableSourceCriteriaInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableSourceCriteriaOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableSourceType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableTemplateCloneInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DecisionTableType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeleteIntent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeleteIntents.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeleteSocialPostIntent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DelimiterTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeliveryAddressInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeliveryEstimateOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeliveryEstimationErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeliveryEstimationProductInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeliveryMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DependencyDetailOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeploymentActionEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DeploymentTargetType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DesignationDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DetailedProjectedRebateAmountCalc.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DigestJobRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DigestPeriod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DigitalVerificationInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DigitalVerificationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DigitalWallet.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DigitalWalletOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DirectAttributeFilterExpression.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DirectAttributeFilterExpressionValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DirectMessageCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DirectMessageCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DirectMessageMemberActivity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DirectMessageMemberActivityPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DirectMessageMemberPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DiscoverySearchActionResultsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DiscoverySearchCategoryRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DiscoverySearchFacetRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DiscoverySearchFacetValueRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DiscoverySearchProductRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DispenserAddressOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DistanceCalculationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DistinctFacetValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DistinctValueRefinementInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DistinctValueSearchFacet.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DistributePickedQuantitiesInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DistributePickedQuantitiesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DistributeToOrdersInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DmoFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DmoFilterLimit.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DmoFilterLimitValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DmoFilterValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentAttachmentInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentAttachmentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentGenerateRepresentationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentInfoAttributes.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentInfoAttributesWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentInfoList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentInfoListValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DocumentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DonorDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DonorOptionsDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DoubleList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DownVoteSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DPEListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DPETargetContextEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/DraftEinsteinResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EditCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EducationApiErrorDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EduExternalIdDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EduObjectWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EffectiveAccountDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EffectiveMappingRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinAnswerType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinDatastream.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlm.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmAdditionalConfigInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLLMEmbeddingItemOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmEmbeddingsAdditionalConfigInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmEmbeddingsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLLMEmbeddingsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmFeedbackInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmFeedbackOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmGenAiSourceReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmGenerationCitationOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmGenerationContentQualityOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmGenerationGenAiCitedReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmGenerationGenAiSourceContentInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmGenerationGenAiSourceReferenceInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLLMGenerationItemOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmGenerationSafetyScoreOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLlmGenerationsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinLLMGenerationsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinPromptRecordCollectionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinPromptRecordFieldRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinPromptRecordRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinPromptTemplateGenerationsError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinPromptTemplateGenerationsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinPromptTemplateGenerationsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinPromptTemplateMaskContentRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinPromptTemplateMaskDataRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinPromptTemplateMaskSettingsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinRecommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinRecommendations.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinRecommendationValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinRepliesAppType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinResponseSpeakerType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinResponseType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinUser.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EinsteinUsers.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ElectronicMediaGroupDeveloperName.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EligibleProgramRebateTypesOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailAddress.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailMergeFieldCollectionInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailMergeFieldInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailMergeFieldService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailMessage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailMessageAutomationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailMessageCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailMessageDirection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmailMessageStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Emoji.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmojiCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EmployeeProfiles.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EndorsePolicyIAInputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EndorsePolicyInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EndpointExtensionRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EndpointExtensionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagedPartyOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementAttendeeCreateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementAttendeeCreateOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementAttendeeDetailsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementAttendeeFetchOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementContainerConnect.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementCustomFieldsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementCustomFieldsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementDetailsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementInteractionCreateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementInteractionDetailsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementInteractionFetchOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementInteractionUpdateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementsCreateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementsCreateOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementsFetchOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementsIdCreateOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementsIdOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementStatusOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementsUpdateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementsUpdateOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementTopicCreateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementTopicCreateOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementTopicDetailsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementTopicFetchOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EngagementTopicOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EnhancedLinkCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EnrollmentChannelResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EnsureFundsAsyncInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EnsureFundsAsyncOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EnsureRefundsAsyncInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EnsureRefundsAsyncOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EntityLabel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EntityLinkSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EntityLinkSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EntityRecommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EntityResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EntityScopedGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EntityStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EOLTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Error.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ErrorDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ErrorDetailsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ErrorOutputRepresentations.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ErrorRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ErrorResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ErrorsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EsMessageType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EstimateDeliveryDateInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EstimateDeliveryDateOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EthocaAlertCallbackInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EthocaAlertCallbackOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EthocaAlertOutcome.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EthocaAlertRefundStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EthocaEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EthocaLinks.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EUProgram.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EvaluateCallerVideoCallResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EvaluationError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Event.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EventTypeResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EventTypesOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/EvfSdk.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExactlyRelativeDateComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExactlyRelativeDateComparisonValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Example.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleEntityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleEntityRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleListInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleMapInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleMapRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleNoResourceInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleNoResourceRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleObjectInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleSerializationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleSerializationRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExampleStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Exchanges.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExecutionCallApiTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExecutionCallStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExecutionStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExecutionTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExperimentStateEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExplainabilityActionLogCreate.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExplainabilityActionLogDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExplainabilityActionLogInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExplainabilityActionLogs.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExplainabilityActionLogSortEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExplainabilityDetailedActionLogDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExplainabilityLogDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExplainabilityLogs.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExplainabilityService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExpressionDataType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExpressionSetVersionDependencyEnumRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExpressionSetVersionDependencyOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtendedCommerceDelivery.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtendedFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtensibilityPerfTestRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Extension.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtensionDefinition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtensionDefinitions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtensionInformationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtensionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtensionOutputCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtensionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtensionsCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtensionsCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProvider.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProviderCredential.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProviderCredentialInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProviderCredentials.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProviderCredentialsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProviderInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProviderList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProviderParameter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProviderParameterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalAuthIdentityProviderParamType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredential.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialAuthParameterName.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialParameter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialParameterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialParameterType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialPrincipal.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialPrincipalAccess.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialPrincipalAccessType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalCredentialPrincipalInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalDocCreationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalDocCreationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalDocument.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalDocumentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalDocumentUsersListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalDocumentUsersOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalEmailService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalFilePermissionInformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalIdDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalIdentifierOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalIdInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalIdOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalManagedAccount.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalManagedAccountAddressOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalManagedAccountCollectionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalManagedAccountOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalMediaAccountInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalMediaAccountStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalMediaAddressInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExternalMediaContactInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtractionContextAttributeMappingRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtractionContextDefinitionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtractionContextMappingOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtractionContextMappingRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ExtractionContextUseCaseMappingRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FacetValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeatureExtractionParametersFieldMapValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Features.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeatureValidationUseCaseEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Feed.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedbackEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedBody.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedCommentSortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedDensity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedDirectory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedDirectoryItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedElement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedElementCapabilities.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedElementCapabilitiesInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedElementCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedElementCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedElementCapabilityType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedElementInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedElementPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedElementType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedEnabledEntity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedEntityIsEditable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedEntityNotAvailableSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedEntityReadSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedEntityShareCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedEntityShareCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedEntityStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedEntitySummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedFavorite.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedFavorites.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedFavoriteType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItemAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItemAttachmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItemAttachmentType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItemInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItemPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItemSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItemTopicPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItemType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedItemVisibilityType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedModifiedInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedPoll.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedPollChoice.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedPostSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedReadStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedReadStatusInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedReadSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedSortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FeedType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldChangeNameSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldChangeSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldChangeValueSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldChangeValueType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldClassificationSetting.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldCount.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldDataTypesEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldSet.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldSetOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldSetsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldValueInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FieldValueOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/File.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileAsset.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileBasedDataImport.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileBasedImportStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileBasedImportTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileIdInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FilePreview.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FilePreviewCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FilePreviewFormat.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FilePreviewStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FilePreviewUrl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FilePublishStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FilesCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FilesCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileSharingOption.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileSharingPrivacy.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileSharingType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileStat.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileStatsCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileStatsType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FileText.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FilterOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FindAppointmentSlotResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FindRoutesWithFewestSplitsGroupUsingOCIInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FindRoutesWithFewestSplitsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FindRoutesWithFewestSplitsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FindRoutesWithFewestSplitsUsingOCIInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FindRoutesWithFewestSplitsUsingOCIItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FindRoutesWithFewestSplitsUsingOCIOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FindRoutesWithFewestSplitsWithInventoryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FindRouteWithFewestSplitsUsingExpandTypes.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FirstReviewerOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FolderItemType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FollowerPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FollowingCounts.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FollowingPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FollowIntents.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FollowSocialPersonaIntent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Form.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormFactor.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormFields.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormFieldType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormSubmission.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormSubmissionFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormSubmissionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormulaFilterType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormulaScope.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FormulaValidationResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FrequencyCadenceEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FrequencyCadenceOptions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentGroupInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentGroupOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentOrderCancelLineItemsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentOrderInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentOrderInvoiceInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentOrderInvoiceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentOrderLineItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentOrderLineItemsToCancelInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/FulfillmentOrderOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GatewayLogResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenAiActionAdditionalContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenAiActionHydratedPrompt.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenAiActionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenAiActionLlmConfig.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenAiActionPrompt.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenAiActionWrappedValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenAiCopilotSystemMessageTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenAiCopilotTemplateActionTypesEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenAiCopilotToneEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GeneralPractitionerOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenerateBenefitSessionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenerateMetadataInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenerateMetadataOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenericBundleCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenericCustomObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenericFeedElement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenericObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenericObjectOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenericObjectWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GenericPricingResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetApplicationFormOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetApplicationFormResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetBlockchainConfigOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetContractValueInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetContractValueOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetFOCapacityValuesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetFOCapacityValuesRequestInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetFunctionValueInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetFunctionValueOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetLearningOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetMbrEngmtTrailAttributeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetPolicyOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetQuoteOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetSlotChainsInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetSlotChainsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GetSlotStatusInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftCampaignDefaultDesignationRecordOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftCampaignDefaultDesignationsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftCommitmentDefaultDesignationRecordOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftCommitmentDefaultDesignationsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftCommitmenteDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftCommitmentLookupDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftCommitmentTransactionMatchingOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftDesignationRecordOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftTransactionLinkedDesignationsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftTransactionLookupDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftTransactionPeriodEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftTransactionRecordOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GiftTransactionsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GlobalInfluence.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GoalDefinitionCategoryEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupAppointmentAccessTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupArchiveStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupChatterSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupEmailFrequency.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupInformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupInformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupMember.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupMemberAssociationCycleDetector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupMemberPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupMembershipRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupMembershipRequests.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupMembershipRequestStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupMembershipType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupRecord.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupRecordInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupRecordPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupViralInvitationsStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GroupVisibilityType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GuardRail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GuardrailCurrentValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GuardrailDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Guardrails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GuardrailTypeEnumRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/GuestReferralOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HarmonizeBilling.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HashtagSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HashtagSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HCAddressInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HideSocialPostIntent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HoldFOCapacityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HoldFOCapacityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HoldFOCapacityRequestInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HoldFOCapacityResponseOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HsrCommerceCatalog.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HttpHeaderOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HttpMethodEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/HttpRequestMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Iamappointmentresource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IarcResourceFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IBusinessObjectivesAndRecsFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ICommerceManagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IComplaintMgmtConnectFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Icon.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityProviderAuthFlow.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityProviderAuthProtocol.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityProviderClientAuth.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityVerfFormDisplayRecord.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityVerfFormFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityVerfFormFieldListOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityVerfFormFieldOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityVerfFormInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityVerfFormOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IdentityVerification.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IDigitalLendingConnectFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IDisputeManagementConnectFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndividualApplicationObjectOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndividualApplicationStatusOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndividualMemberInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndividualMemberOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesCompliance.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesEinsteinEnumHelpers.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesFundraisingOperationsFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesGuardrailInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesGuardrailListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesGuardrailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesPricingResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesRatingResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesRedeemVoucherInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesRedeemVoucherOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IndustriesVoucherConnect.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IngestApiConnectionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IngestApiConnectionInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IngestionEventInputWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IngestionEventOutputWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InlineImageSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InlineImageSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InnerEnsureFundsAsyncInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Insight.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsightsComparisonEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsightsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsightsResultCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsightsResultTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsightsTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsightValuesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsPolicyAddlInputIARep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsPolicyIAInputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsPolicyTrxnIAInputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InstanceKeysIARep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsuranceBrokerageFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsuranceCensusMgmtErrorResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsuranceCommissionProcessingInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsuranceCommissionProcessingOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsuranceConfigMessageOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsuranceFoundationFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsuranceKpiDetailsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsuranceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsurancePolicyAdminFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsurancePolicyInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsurancePolicyProcessOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsurancePolicyRenewInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsurancePolicyTransactionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InsuranceQuoteOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InteractionCalculationProcedures.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InteractionsCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InteractionStudioConnector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InternalTestUtilities.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvalidIds.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InventoryActionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InventoryCheckAvailabilityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InventoryCheckAvailabilityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InventoryLevelsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InventoryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InventoryProductCheckAvailabilityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InventoryProductOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Invitation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Invitations.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InviteInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvocableInternalTestInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvocableInternalTestNestedInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvocableInternalTestNestedOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvocableInternalTestNestedWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvocableInternalTestOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvocableInternalTestWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceAPIConfigurationOverride.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceBatchDraftToPostedInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceBatchDraftToPostedResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceBillingTermUnitEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceDraftToPostedInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceEstimatedTaxCalculationInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceGroupTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceIngestionOutputErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceLineTaxProcessingStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceRecoveryResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/InvoiceToPayInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IServiceProcessConnectFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IssuePolicyIAInputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/IssuePolicyInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ItemPriceInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ItemPriceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ItempricePrice.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ItempricePriceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ItemQuantityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ItemQuantityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/JoinVideoCallResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/JournalStatusResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Knowledge.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/KnowledgeArticleVersion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/KnowledgeArticleVersionCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/KnowledgeMigration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LabeledRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LabeledSubject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LabeledSubjectWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Language.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LeadInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Learning.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningCourse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningCourseOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningFoundationItemLookup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningFoundationItemOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningFulfiller.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningOutcomeItemOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningProgram.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningProgramOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LearningTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LeaveVideoCallResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LightningExtensionInformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LightningKnowledgeArticleVersion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LightningKnowledgeArticleVersionCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LightningScheduler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LikeIntent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LikeIntents.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LikeSocialPostIntent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LikeSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LineItemResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkAttachmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkMetadataCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkMetadataInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkMetadataSource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkMetadataType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LinkSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LiteralJson.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationAvailabilityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationCapacityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationCheckAvailabilityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationCheckAvailabilityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationGroupCheckAvailabilityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationGroupCheckAvailabilityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationGroupLevelsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationLevelsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LocationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LogicalComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LongList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LoyaltyConnect.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LoyaltyManagementConnect.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LoyaltyVoucherConnect.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/LscMetadataConnect.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MaintenanceInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MaintenanceType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentActionCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentActionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentAssociations.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentBodyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannelCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannelCreateRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannelDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannelDomainRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannels.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannelsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannelSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannelTargetSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentChannelUpdateRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentClonedVariants.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentCloneStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentCloneStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentCollectionDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentCollectionItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentCollectionItems.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentCollectionItemTypeSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentCollectionMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentCollectionMetadataAuthoring.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDateAndTimeNodeValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDateNodeValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDelivery.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDeliveryChannelRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDeliveryChannelsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDeliveryChannelSummaryRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDeliveryDocument.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDeliveryDocumentCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDeliveryDocumentSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDocument.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDocumentClone.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDocumentCloneInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentDocumentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentFailedVariants.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentFolderSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentLanguageSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentMediaNodeValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentMediaSourceNodeValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentNodeType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentNodeValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentPublishDiagnosticInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentPublishInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentPublishOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentReferenceSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentSpace.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentSpaceChannelInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentSpaceChannelRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentSpaceChannelsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentSpaceChannelsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentSpaceCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentSpaces.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentSpaceSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentTextNodeValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentTypeSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentUnpublishInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentUnpublishOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentUserSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentVariant.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentVariantStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentVariantStatusOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentVariantUpdateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentVersion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentVersionCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentVersionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedContentVersionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedSocialAccount.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedSocialAccounts.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedSocialAccountStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedTopic.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedTopicCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedTopicPositionCollectionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedTopicPositionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedTopics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ManagedTopicType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MappingOutputCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MappingOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MapValueWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MarketingCloudConnector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MarketingIntegration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MarkupBeginSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MarkupBeginSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MarkupEndSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MarkupEndSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MarkupType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MatchInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MatchType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MatchUpdateLogicDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MbrEngmtAttributeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MCSFolderShare.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MCSFolderShareCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MCSFolderShareCollectionUpdateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MCSFolderShareInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MCSFolderShareStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MCSFolderShareTarget.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MCSFolderShareTargetCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaAccountConnectFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaAccountMapObjectInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaASMCloneOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaAsmConnectFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaAsmEnumHelpers.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaAsmTargetingConnectFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaPlanConfigurationInputEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaPlanLineItemOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaPlanObjectInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaPlanOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaPlanPricingPreferenceEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaPlanSaveAsTemplateInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaPlanSaveAsTemplateOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediaReferenceCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MedicalDirectorOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MediumCharacteristicOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberAccountInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberAccountOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberBenefitOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberBenefitsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberContactInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberContactOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberCurrencyOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberDetailsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberEnrollmentTransactionJournalOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberPersonAccountInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberTierOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberVouchersSortField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MemberVouchersSortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MentionCompletion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MentionCompletionPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MentionCompletionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Mentions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MentionSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MentionSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MentionValidation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MentionValidations.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MentionValidationStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MessageBody.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MessageBodyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MessageCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MessageListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MessageRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MessageSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MessageSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MessageSegmentType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MessageSeverity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MetadataContentInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MetadataContentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MetricSpanEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Missions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MLDomainTraining.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlDomainTrainingErrorType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlDomainTrainingInfoRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlDomainTrainingRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlEndOfLifePolicyEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlErrorCodeMetricEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlRetrievalModeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlRetrieverQueryResultDocumentCitationRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlRetrieverQueryResultDocumentContentRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlRetrieverQueryResultDocumentRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlRetrieverQueryResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlRetrieverQueryTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlRetrieverReferenceTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlRetrieverSortByEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlSortOrderEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MlTestConnectionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MobilePublisherOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MobilePublisherServiceAccountAuthRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MobilePublisherStoreCredentialsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ModelFeature.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ModerationCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ModerationFlagItemDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ModerationFlags.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ModerationFlagsCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ModifyShiftResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MoreChangesSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Motif.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MultipleAsyncOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MultipleEnsureFundsAsyncInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MultipleFulfillmentOrderInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MultipleFulfillmentOrderInvoicesInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MultipleFulfillmentOrderInvoicesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MultipleFulfillmentOrderOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MuteCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MuteCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/MuteSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredential.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentialCalloutOptions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentialCalloutOptionsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentialInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentialList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentialParameter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentialParameterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentialParameterManagedByFeatureCapabilities.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentialParameterType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentials.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NamedCredentialType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NavigationMenu.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NavigationMenuItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NavigationMenuItemActionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NavigationMenuItemCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NavigationMenuItemOpenTarget.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NavigationMenuItemType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NavigationMenuPageReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NBAActionParameter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NBAActionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NBAFlowAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NBAFlowType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NBANativeRecommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NBARecommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NBARecommendations.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NBAStrategyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NBATargetType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NetworkConnection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NetworkConnectionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NetworkDataCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NetworkDataCategoryCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NetworkDataCategoryGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NetworkDataCategoryTree.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NewFileAttachmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NewUserAudienceCriteria.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NewUserAudienceCriteriaInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NextBestAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NftSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NftSettingsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NonEntityRecommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NotFoundException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NotifyAccessResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/NumberComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OAuthCredentialAuthUrl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OAuthCredentialAuthUrlInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OauthProviderInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ObjectJoinTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ObjectMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ObjectRelatedUrl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ObjectWithJoinRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIAttributeSetInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIAttributeSetOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIBaseOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIBatchUpdateErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIBatchUpdateInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIBatchUpdateOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIBatchUpdateSingleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIBatchUpdateSingleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCICancelReservationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCICancelReservationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCICreateReservationErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCICreateReservationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCICreateReservationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCICreateReservationSingleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCICreateReservationSingleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIFulfillReservationErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIFulfillReservationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIFulfillReservationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIFulfillReservationSingleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIFulfillReservationSingleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIFutureInventoryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIFutureStockSingleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIGetInventoryAvailabilityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIGetInventoryAvailabilityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIInventoryRecordOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCILocationAvailabilityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCILocationGroupAvailabilityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIPublishLocationStructureOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIPublishLocationStructureStatusOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIRecalculateLocationGroupInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIReleaseReservationErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIReleaseReservationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIReleaseReservationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIReleaseReservationSingleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIReleaseReservationSingleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCITransferReservationErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCITransferReservationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCITransferReservationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCITransferReservationSingleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCITransferReservationSingleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIUpdateReservationErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIUpdateReservationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIUpdateReservationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIUpdateReservationSingleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIUpdateReservationSingleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIUploadInventoryAvailabilityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OCIUploadInventoryAvailabilityStatusOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OcrResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OcrResultCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OcrResultNormalizedText.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalytics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsLogCreateRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsLogDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsLogInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsLogsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsMetadataRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsSettingRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsTrackingComponentRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsTrackingExternalDefRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsTrackingExternalEventDefRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniAnalyticsTrackingGroupRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmnichannelInventoryService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorInfoRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorMappingItemInfoDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorMappingItemInfoRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorSimulateInputParamRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorSimulateInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorSimulateInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorSimulateRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorUpsertInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDataraptorUpsertOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDecisionMatrixDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDecisionMatrixListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDocusignDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDocusignListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDRDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerDRListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerEmailDocumentListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerEmailDocumentRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerEmailTemplateListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerEmailTemplateRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerEntitiesInfoDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerEntityInfoDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerEntityInfoRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerExpressionGrammarDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerExpressionGrammarRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerOmniProcessDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerOmniProcessListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniDesignerOmniProcessUpsertRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniIntakeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniProcessCloneOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmniProcessOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OmsAnalytics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPIAccountContactRelationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPIAccountOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPICategoryDetailOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPICharacteristicOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPIConnectInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPIContractOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPIOutputListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPIOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPIProductDetailsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OpenAPIRelatedPartyOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OperationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OptionsNode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Orchestration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrchestrationInstance.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrchestrationInstanceCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrchestrationInstanceStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrchestrationStageInstance.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrchestrationStepInstance.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrchestrationStepType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrchestrationWorkItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrchestrationWorkItemStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderAdjustmentGroupType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderDeliveryGroupSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderDeliveryGroupSummaryCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderDeliveryGroupSummaryLookupOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderDeliveryGroupSummarySort.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderDeliveryMethodLookupOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemRelationshipOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryAdjustmentAggregates.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryAdjustmentCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryAdjustmentCollectionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryAdjustmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryAdjustmentList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryLookupOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummaryProduct.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemSummarySort.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderItemTypeCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderPaymentMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderPayments.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderPaymentSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderQuantitiesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderShipment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderShipmentCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderShipmentItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderShipmentItemCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderShipmentItemSort.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderShipmentSort.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryAdjustment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryAdjustmentAggregates.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryAdjustmentAggregatesAsyncInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryAdjustmentAggregatesAsyncOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryAdjustmentAggregatesStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryAdjustmentCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryAdjustmentTargetType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryCreation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryLookupInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryLookupOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryProductAttribute.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryProductLookupOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummarySortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderSummaryVerificationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderToCartFailedProduct.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderToCartInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrderToCartResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Organization.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OrganizationSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OriginalDenialMedicalDirectorOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OriginCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OutOfOffice.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OutreachInvocableActionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OutreachLatestEmailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/OutreachSourceCodeDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PageInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PardotBusinessUnitContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PardotBusinessUnitContextItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PardotBusinessUnitContextOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ParticipantRecentInteractionsResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyCreditProfileResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyExpenseInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyExpenseResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialAssetAdditionalOwnerInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialAssetAdditionalOwnerResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialAssetInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialAssetLien.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialAssetLienResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialAssetResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialLiabilityBorrowerInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialLiabilityBorrowerResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialLiabilityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyFinancialLiabilityResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyIdentityVerificationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyIdentityVerificationResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyIdentityVerificationStepInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyIdentityVerificationStepResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyIncomeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyIncomeResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyOrPartyRoleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyOrPartyRoleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyProfileAddressInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyProfileAddressResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyProfileInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyProfileResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyProfileRiskInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PartyProfileRiskResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PayLoadOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentActionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentAuthAdjustmentResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentAuthorizationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentGroupRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentGroupResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentInfoInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentInitiationSourceInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentInstrumentDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentLineApplyRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentLineApplyResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentLineUnapplyRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentLineUnapplyResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentMethodDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentMethodResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentMethodTokenizationGatewayResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentMethodTokenizationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentMethodTokenizationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Payments.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentsBilling.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PaymentsIngestFamilyWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PBEDerivedPricingOutRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PercentRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PerformCalculationDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PeriodBoundaryEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PeriodTypesEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Personalization.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PersonalizationAttribute.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PersonalizationPaginatedResponseBase.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PersonalizationSchema.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PersonalizationSourceEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PersonalizationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PersonEmploymentInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PersonEmploymentResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PhoneNumber.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Photo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PhotoInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PicklistRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PickTicket.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PinCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PinCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PinnedFeedElements.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PlaceOrderErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PlaceQuoteErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PlaceSalesTransactionErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PlatformAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PlatformActionGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PlatformActionGroupCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PlatformActionStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PlatformActionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PointsChangeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PointsRewardsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PoliciesToRenewListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PoliciesToRenewListRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PolicyOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PollAttachmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PollCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PollCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PostAuthApiPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PostAuthGatewayResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PostAuthorizationResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PostAuthRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PostAuthSPMStatusRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictHistoryIntervalEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Prediction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionOutputObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionOutputObjectValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionOutputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionOutputValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionRequestRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionRequestRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictionWarning.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PredictorField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PreserveCart.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PreviewBaseOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PreviewBenefitSessionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PreviewBenefitSessionsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PreviewCancelOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PreviewCartToExchangeOrderInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PreviewCartToExchangeOrderOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PreviewReturnOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceAdjustmentSchedule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceAdjustmentScheduleAdjustmentMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceAdjustmentScheduleType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceAdjustmentTier.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceAdjustmentTierType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceAlteration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceAlterationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceAlterationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceAlterationPriceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PriceProtectionExecutionErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingActionGetOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingActionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingActionParamValuesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingActionPostOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingApiExecutionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingAttributeNameValueTupleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingLineItemInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingProcessExecutionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingRecipeLookUpTableResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingRecipeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingRecipePostOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingRecipeResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingResultLineItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingTermUnit.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PricingWaterFallMetaDataResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PrimitiveComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PrivilegeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedureConfigOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanCriterionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanDefinitionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanDefinitionsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanDefinitionVersionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanEvaluationRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanEvaluationResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanEvaluationResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanGenericErrorRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanGenericOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanOptionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanSectionEvaluationRuntimeRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcedurePlanSectionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcessDefinitionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcessDefinitionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcessDetailInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcessDetailOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcessExceptionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcessExecutionLineItemDetailsResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcessingOptionsDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcessRuleConditionFilterCriteriaOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProcessRuleStepType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProducerSplitArngSearchOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeCustomFieldInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeCustomFieldOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeCustomFieldPicklistValueRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeSelectionInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeSet.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeSetInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeSetSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributesToProductEntry.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeValueMetadataRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductAttributeViewType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCartItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCartItemCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCategoryData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCategoryDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCategoryDetailCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCategoryMedia.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCategoryMediaGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCategoryPath.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCharacteristicInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductCheckAvailabilityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductChild.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductChildCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductClass.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductDeliverEstimationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductDetailsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductEntitlement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductExpandOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductExpandType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductFileFormat.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductImageGroupOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductImageOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductImageViewType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductInventory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductInventoryPricing.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductMedia.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductMediaGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductMediaInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductMediaType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductMediaUsageType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOfferingInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOfferingOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOfferingQualificationApi.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOrderingOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOrderItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOrderItemOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOrderItemRelationshipInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOrderManagementInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOverview.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductOverviewCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductPrice.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductPriceEntry.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductPricingInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductQuantityRuleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductReturnRateListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductReturnRateOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSchemaType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductScope.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSearchFacetOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSearchFacetValueOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSearchGroupingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSearchImageOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSearchInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSearchOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSearchProductOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSearchResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSearchSuggestionsResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSellingModel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductsListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductSummaryPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductTransferStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductVariantAttributeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductVariantAttributeSetOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductVariantAttributeValueOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductVariantOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductVariationAttributeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductVariationAttributeValueOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductVariationInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProductVariationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramApplicationFileInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramApplicationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramApplicationItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramApplicationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramEnrollmentsDTO.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramEnrollmentsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramEnrollmentsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramIndividualApplicationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramManagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramRebateTypes.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProgramsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProjectedRebateAmountCalc.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionActionEntityRefOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionActionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionAdjustmentTargetType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionBonusProduct.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCart.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartAdjustmentGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartAdjustmentGroupInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartDeliveryGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartDeliveryGroupInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartDeliveryGroupMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartDeliveryGroupMethodInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartDeliveryMethodAdjustment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartItemInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartItemKey.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartItemPriceAdjustment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCartItemPriceAdjustmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCoupon.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCriteriaGroupOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionCriteriaOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionEvaluateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionEvaluation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionManagementInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionParentProductsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionPatternInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionPatternOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionProductCategoriesInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionRewardType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionScope.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PromotionValidForOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProviderInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProviderOutputCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProviderOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProvidersError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProvidersInputResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ProvidersInputResultDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PublishEventInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PublishEventOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PublishSchedule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PublishStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PurchasedProductCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PurchasedProductSummaryOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/PurchaseQuantityRule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QualifiedProductOfferingItemOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuantityWithSkuInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QueryLanguage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QueryPath.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QueryPathWrapper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QueryProductOfferingInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QueryProductOfferingOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuerySqlInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuerySqlMetadataItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuerySqlOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuerySqlRow.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuerySqlStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuerySqlStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuestionAndAnswers.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuestionAndAnswersCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuestionAndAnswersCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuestionAndAnswersSuggestions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuestionAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuestionAttachmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuestionContextType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuickTextContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuotaAvailabilityDateRange.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuotaAvailabilityRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuotasAllocationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuotasAllocationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuoteInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuoteItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/QuoteItemRelatedRecordNode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RADFieldFilterOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RADJoinFieldOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RADNodeFilterOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RADNodeObjectOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RADNodeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RADOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RangeRefinementInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RangeSearchFacet.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RankAverageDistanceInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RankAverageDistanceOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RateLimitException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RatePlanResponseRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RatingErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RawDataInputWrap.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReadBy.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReadByCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReadByCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReadByPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecencyCriteria.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecipeSortOrderEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecipientEngagementContextInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Recommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationActionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationAudience.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationAudienceCriteriaType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationAudienceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationAudienceMemberOperationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationAudiencePage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationChannel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationDefinition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationDefinitionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationDefinitionPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationExplanation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationExplanationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationMode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationReaction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationReactionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationReactions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationReactionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Recommendations.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationsCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendedObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecommendedObjectType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAccessDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationAllowedObjectOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationAllowedObjectsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationApplicableFieldOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationAssociatedObjectInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationCreationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationDefinitionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationDefinitionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationDefinitionPartialUpdateInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationDefinitionPartialUpdateOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationDefinitionResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationEntityApplicableFieldsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationFilterRowInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationJoinInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAggregationUpdationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlert.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertActionCollectionMapRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertActionInfoCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertActionInfoRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertActionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertActionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertActionParameterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertActionSingleOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertBulkActionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertCollectionMapRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertErrorRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertErrorType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertSeverityType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordAlertSourceType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordColumnOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordFieldType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordFieldValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordFilterCriteriaFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordRollupResultColumnOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordRollupResultInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordRollupResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordRollupResultRowOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Records.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordSeoProperties.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordsetFilterCriteria.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordsetFilterCriteriaCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordsetFilterCriteriaInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordSnapshot.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordSnapshotAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordSnapshotCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordSummaryList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordValidationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordView.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecordViewSection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecurringAppointmentSlotResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecurringSlotsResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecurringSubTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecursOnDayEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RecursOnEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RedeemVoucherInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RedeemVoucherOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Reference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferencedRefundRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferencedRefundResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferenceItemBaseInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferenceItemCodeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferenceLineError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferenceRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferenceWithDateRecordField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralAdvocateContactInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralAdvocateProfileInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralAdvocateProfileOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralEventConnect.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralEventInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralEventOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralInfoOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralManagementConnect.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralManagementOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralMemberEnrollmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralMemberEnrolmentOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralPromotionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReferralStatisticsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RefinementInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RefundGatewayResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RefundIAOutputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RefundLineApplyRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RefundLineApplyResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RefundOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RefundRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RefundResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RegisterGuestBuyer.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RegisterGuestBuyerInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RegisterGuestBuyerOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelatedEntityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelatedFeedPost.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelatedFeedPosts.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelatedFeedPostType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelatedPartyInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelatedPartyOrPartyRoleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelatedPersonEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelatedPromotionRecordsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelatedQuestion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelationshipCardinality.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RelativeToNowDateComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReleaseHeldFOCapacityInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReleaseHeldFOCapacityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReleaseHeldFOCapacityRequestInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReleaseHeldFOCapacityResponseOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RenewInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RenewPolicyIAInputRep.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RenewPolicyInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RenewRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReopenedByOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReplyIntent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReplyIntents.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReplyRecommendationsChannelType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReplyRecommendationsMetric.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReplyRecommendationsMetrics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReportTypeDetailsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryDirectoryEntryCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryFileDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryFileSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryFolderDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryFolderItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryFolderItemsCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryFolderSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryGroupSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryPermissionTypeCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RepositoryUserSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Repricing.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Reputation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReputationLevel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RequestHeader.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RequestHeaderInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RequestingPractitionerOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RequirementUpdateItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RescheduleSlotChainInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RescheduleSlotChainOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReserveActionResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResourceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResourceLinkSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResponseResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResponseStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResponseSuggestion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResponseSuggestions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResultNodeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResultRecordOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ResultRootNodeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnItemsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnItemsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnOrderInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnOrderItemDeliveryChargeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnOrderItemFeeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnOrderItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnOrderItemSplitLineOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnOrderLineItemFeeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnOrderLineItemInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ReturnOrderOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RevenueAddressInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RevenueAsyncLineLevelOutputResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RevenueAsyncRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RevenueElementRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RevenueElementResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RevenueRecognition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RevenueRecognitionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RevenueRecognitionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RewardsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Routing.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryCreateUpdateOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryReadOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryStatusEnumRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryTagMappingsCreateUpdateOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryTagMappingsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryTagMappingsOverallInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryTagMappingsReadOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryTagMappingsReadOutputList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryVersionCreateUpdateOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryVersionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryVersionListOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryVersionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryVersionOutputRepresentationList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RuleLibraryVersionStatusEnumRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RulesetExecutionTypeEnumRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RulesetStatusEnumRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RulesetVersionCreateUpdateErrorDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RulesetVersionCreateUpdateOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RulesetVersionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RulesetVersionListOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/RulesetVersionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/S3Connector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/S3ConnectorInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaleApiPaymentMethodRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaleGatewayResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaleRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaleResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SalesAgreementManagementProductErrorResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SalesforceInbox.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SalesTransactionContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SalesTransactionContextInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SalesTransactionContextRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaqlQueryInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaqlQueryMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SavedPaymentMethodAbstractResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SavedPaymentMethodOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SavedPaymentMethodStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SavedPaymentMethodType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SavedPaymentMethodUsageType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaveTargetDataCategoryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaveTargetDataInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaveTargetDataSegmentInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaveTargetDataSegmentValueInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaveTargetEntityDataInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaveTargetExpressionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaveTargetingInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SaveTargetingOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ScheduledRecommendation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ScheduledRecommendationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ScheduledRecommendationPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ScheduleOptionsInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SchedulerExtendedFieldsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SchedulingTimeZoneEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ScManagementOrg.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Scope.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ScopedSearchResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ScoreThresholdFilterCriteria.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Search.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchAnswer.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchAppliedOrderBy.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchBoostBuryConditionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchBoostBuryRuleAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchBoostBuryRuleOperation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchBoostBuryRuleOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchBoostBuryRulesCollectionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchBoostBuryTargetExpressionOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchConditions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchDataCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchDataCategoryOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchFacet.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchFieldRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchFilterRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchNullsOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchOrderBy.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchResultHeaderRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchResultsRule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchResultsRulesCollectionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchResultsRuleTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchSuggestion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SearchSuggestionWithProductSuggestion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SegmentCreationFlow.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SegmentIntelligenceSetupConfigData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SegmentIntelligenceSetupConfigDataResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SegmentIntelligenceSetupConfigsData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SegmentType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SelectedSearchResultInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SelectedSearchResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SelectedVerifiedResultInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SelectedVerifiedResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SellingModelType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SemanticSearchQueryInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SemanticSearchTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SequenceOrderPaymentSummaryInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SequenceVerificationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SequenceVerificationRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceAppointmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceAppointmentOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceAppointmentResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceAutomationFamily.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceCatalogFrequentActionsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceCatalogItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceCatalogItemAttributes.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceCatalogItemCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceCatalogItemsFetchOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceCatalogItemsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceCatalogStaticActionsOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceEinsteinAppType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceEinsteinModelManagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceEinsteinModelTrainingErrorCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceEinsteinModelTrainingStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceEinsteinReadinessCheckType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceEmployeeStatusOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServicePlanAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServicePlanDataOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServicePlanStepSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceProcessDefinitionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceProcessDependencyDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceProcessRecordRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceProcessRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceProcessRequestInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceRequestEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceRequestInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceRequestOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceResourceCapacity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceResourceCapacityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceResourceCapacityListResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceResourceCapacityOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceTerritoryCapacity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceTerritoryCapacityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceTerritoryCapacityListResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServiceTerritoryCapacityOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServicingFacilityOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ServicingPractitionerOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SetupCallResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SharedAchievementMapping.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SharedOrderPaymentSummarySequenceInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ShareRelationshipArrayRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ShareRelationshipOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Sharing.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SharingReasonRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ShiftsFromPattern.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ShiftsFromPatternError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ShiftsFromPatternInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ShippingCarrierInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ShippingCarrierMethodInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SimulationContextInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Sites.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SiteSearchItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SiteSearchResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SkillAchievementMapping.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Slot.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SlotChain.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SlotChainEntry.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SlotChainValidationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SlotChainValidationRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Slots.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SlotSearchDatesCriteria.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SlotStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartAnswer.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartAnswers.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscovery.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAbstractAIModelSourceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAbstractClassificationThreshold.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAbstractClassificationThresholdInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAbstractFieldMappingSourceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAbstractModelFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAbstractPredict.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAbstractPredictionPropertyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAggregatePredictConditionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAggregatePredictionErrorRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAggregatePredictionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAggregatePredictStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelClassificationMetrics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelCoefficientCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelCollectionSortOrderType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelDiscoverySource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelDiscoverySourceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelMulticlassMetrics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelRegressionMetrics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelResidual.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelResidualCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelTransformationTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelUserUploadSource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAIModelUserUploadSourceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAssetReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryAssetReferenceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryBaseAssetReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryBinaryClassificationThreshold.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryBinaryClassificationThresholdInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCategoricalImputationMethodEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCategoricalImputationTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCategoricalImputationTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCategoricalProjectedPrediction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryClassificationAlgorithmTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryClassificationPredictionProperty.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryClassificationPredictionPropertyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryClassificationTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCluster.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryClusterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryComplexFilterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryContact.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCustomizableField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCustomizableFieldDefinition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCustomizableFieldDefinitionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCustomizableFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCustomPrescribableFieldDefinition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryCustomPrescribableFieldDefinitionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryDataAlertFieldRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryDataAlertType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryDiscoveryModelRuntime.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryDiscoveryModelRuntimeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryDiscoveryNumericRangeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryDiscoveryPredictSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryExtractDayOfWeekTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryExtractDayOfWeekTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryExtractMonthOfYearTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryExtractMonthOfYearTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldMapping.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldMappingAnalyticsDatasetField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldMappingAnalyticsDatasetFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldMappingCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldMappingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldMappingMappedField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldMappingSalesforceField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldMappingSalesforceFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFieldMapSourceTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFilterFieldTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFilterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFilterList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFilterOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFilterValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFilterValueInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFilterValueTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFreeTextClusteringTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryFreeTextClusteringTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryH2OModelRuntime.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryH2OModelRuntimeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryLiveMetricDetailRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryLiveMetricsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryManyToOneTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryMetricsCollectionRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelCard.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelFieldCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelFieldDate.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelFieldDateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelFieldNumeric.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelFieldNumericInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelFieldText.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelFieldTextInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelFieldTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelMetricType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelRuntimeTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryModelSourceTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryMulticlassClassificationPredictionProperty.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryMulticlassClassificationPredictionPropertyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryMulticlassPredict.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryMulticlassProbability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryNumericalImputationMethodEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryNumericalImputationTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryNumericalImputationTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryNumericalProjectedPrediction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryNumericRange.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryNumericTransformationFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryNumericTransformationFilterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryOneToOneTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryOutcomeGoal.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredDefCollectionSortOrderType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredDefModelStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredDefOutcome.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredDefOutcomeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredDefPushbackFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredict.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictAggregateFunctionEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictColumn.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictColumnCustomText.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictCondition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictErrorObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictImportWarnings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictInputRawData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictInputRecordOverrides.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictInputRecords.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictInputRowObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPrediction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictionDefinition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictionDefinitionCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictionDefinitionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictionTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictJob.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictJobCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictJobInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictJobStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictJobUpdate.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictOutOfBoundsFields.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPredictTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPrescribableField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPrescribableFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsCountFromDateIntervalSetting.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsCountFromDateIntervalSettingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsCountIntervalSetting.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsCountIntervalSettingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsDateIntervalSetting.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsDateIntervalSettingInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionSettingsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsHistoricalDatasetInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsHistoricalDatasetSourceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsIntervalSettingType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsIntervalTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsOverride.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsOverrideInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedPredictionsType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryProjectedValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPushbackField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryPushbackType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRecipient.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRecipientInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRecipientTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshConfig.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshConfigInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshJob.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshJobCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshJobInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshJobStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshJobTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshTask.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshTaskCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshTaskSource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRefreshTaskStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRegressionAlgorithmTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRegressionPredictionProperty.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRegressionPredictionPropertyInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryRowNestedList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryScikitLearn102ModelRuntime.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryScikitlearn102ModelRuntimeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoverySentimentAnalysisTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoverySentimentAnalysisTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoverySetupPropertyTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoverySortOrderEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryStoryNarrativeElementTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTensorFlow27ModelRuntime.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTensorFlow27ModelRuntimeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTensorFlowModelRuntime.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTensorFlowModelRuntimeInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTextTransformationFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTextTransformationFilterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTrainingMetricsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTransformationFilterInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTransformationFilterTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTypographicClusteringTransformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryTypographicClusteringTransformationInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartDataDiscoveryUser.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartResponseInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SmartResponses.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SObjectFieldDataType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SObjectFieldInfoInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SObjectFieldInfoOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SObjectFieldOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SObjectFieldPropertyInfoOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialAccount.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialAccountRelationship.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialCustomerServiceConfig.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialCustomerServiceInboundErrors.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialCustomerServiceInboundPost.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialCustomerServiceMessageTypeSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialCustomerServiceProviderSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialEngagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialNetworkAutenticationInformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialNetworkProvider.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialPostCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialPostIntents.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialPostMassApprovalInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialPostMassApprovalOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialPostMessageType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialPostStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SocialPostStatusType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SortingOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SortOrderEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SortRule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SortRulesCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SpellCorrectionInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Stamp.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StandaloneCreditMemoAdjustmentInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StandaloneCreditMemoChargeInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StandaloneCreditMemoInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StandaloneCreditMemoTaxInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StandaloneTaxStrategyEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StandardFieldDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StandardObjectDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StartEvaluationOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StatementFrequencyResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StatementMethodResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Status.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StatusCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StatusCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StopEvaluationOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StoryAnalysisTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StoryChartValueTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StoryCountInsightsFrequencyChangeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StoryCountInsightsFrequencyEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StoryDescriptiveInsightsImpactEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StoryDescriptiveInsightsRatingEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StrategyTrace.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StrategyTraceNode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StreamingAppConnectionInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StreamingAppConnectionInputRepresentationValidator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StreamingAppConnectorTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StreamSubscriptionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/StringList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Subject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SubjectBase.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SubmitCancelOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SubmitCartToExchangeOrderInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SubmitCartToExchangeOrderOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SubmitReturnOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SubscriberOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Subscription.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SubscriptionARCState.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SubscriptionState.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SubscriptionTermRule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Suggestion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SupportedCloneEntity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SupportedEmojis.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SurveyEmailStatusEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SurveyInvitationEmailInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SurveyInvitationEmailOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SurveyMassInvitationEmailInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SurveyNavigationActionEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SurveyResponseApiStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Surveys.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/SvcApptModeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Target.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetCategoryListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetCategoryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetCollectionInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetCollectionUpdateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetLocationInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetSegmentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetSegmentValueOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TargetUpdateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Task.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxAddressesRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxAddressesResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxAddressRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxAddressResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxAmountDetailsResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxCustomerDetailsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxDetailsResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxEngineLogResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxImpositionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxIncludedOrDutyFreeAmountInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxJurisdictionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxLineItemRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxLocaleType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxPlatform.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxStrategyEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxTransactionRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxTransactionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxTransactionState.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxTransactionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TaxType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TermOrConditionOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TermsOfService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TerritoryAppointmentSlot.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TextClassificationsBulkResultsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TextClassificationsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TextClassificationsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TextClassificationsResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TextClassificationsResultWithIdOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TextComparison.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TextSegment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TextSegmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TextSmartResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ThemeInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TimePeriodInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TimeZone.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ToggleCallTranscriptionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Topic.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicEndorsementSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicImages.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicNamesInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Topics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicsCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicsCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicSort.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicSuggestion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicSuggestionPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TopicSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TrackedChangeAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TrackedChangeBundleCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TrackedChangeItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TrackedChangesCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TrackedCommunicationOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionDetailsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionEventInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionEventOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionJournalOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionLedgersOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionPaymentUpdateRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionPaymentUpdatesInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionPaymentUpdatesOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionPaymentUpdatesResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionPaymentUpdatesResponseLink.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionReceiptInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransactionReceiptOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TransportLocationOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TroubleTicketAttachmentRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TroubleTicketChannelRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TroubleTicketHistoryOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TroubleTicketInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Troubleticketnoteoutputrepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Troubleticketoutputrepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TroubleTicketPartyOrPartyRoleInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TroubleTicketRelatedEntityOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TroubleTicketRelatedPartyInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TroubleTicketRelationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Type.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TypeAndFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/TypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UiObjectRepresentationCardDetailGetResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UiObjectRepresentationCardsGetResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UnapplyCreditResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UnauthenticatedUser.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UnifiedKnowledgeConnector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UnifiedKnowledgeConnectorAuthParam.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UnifiedKnowledgeConnectorJobStatusRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UnifiedKnowledgeConnectorList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UnifiedKnowledgeS3UploadCredentials.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UnitOfMeasureOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UnreadConversationCount.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateAccountInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateAccountOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateCommitmentInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateCommitmentOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateCommitmentResponseLink.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateLearningInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateLearningsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateServiceAppointmentInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateVideoCallResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpdateWaitlistParticipantInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpDownVoteCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpDownVoteCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpDownVoteValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UpVoteSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UsageSubtypeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UsageTypeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/User.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserActivitiesJob.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserActivityCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserActivitySummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserActivityType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserCapabilities.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserChatterSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserContextInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserContextRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserCredentialsInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserFeedEntityActivitySummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserGroupDetailPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserGroupPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserMission.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserMissionActivitiesJob.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserMissionActivity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserMissionActivityCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserMissionActivityStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserMissionActivityType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserOauthInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserOrGroupRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserPreferenceNodeOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserPreferenceOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserProfile.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserProfileDetailOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserProfileOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserProfiles.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserProfileTab.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserProfileTabType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserReferencePage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/UserType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ValidateSignatureResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ValidationErrorOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ValidationMessageRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ValidationOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ValidationResultRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ValidForInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ValidForOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerificationContextInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerificationContextOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerificationProcessFieldInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerificationProcessFieldListOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerificationProcessFieldOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerifiedCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerifiedCapabilityInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerifiedDetailsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerifiedDetailsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerifiedResultInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerifiedResultOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerifierInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VerifierOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VersionedReviseDetailsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VideoCallParticipant.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VideoCallParticipantField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VideoCallParticipantResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoidPostedInvoiceInputRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Vote.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VotePage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Voucher.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoucherDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoucherInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoucherOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoucherPublicKeyOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoucherRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoucherRewardsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VouchersListRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoucherStatusResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoucherWithPriceInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/VoucherWithPriceOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistAnalytics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistAppointmentResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistCheckInInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistCheckInOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistCheckInResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistListResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistParticipantParticipant.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistParticipantResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Waitlistparticipantstats.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistRelationshipsOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistRelationshipsResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistServiceResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistServiceResourceWithWorkTypes.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistWorkType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WaitlistWorkTypeGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Wave.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Web3Transaction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WhatsappBusinessAccount.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WhatsappBusinessAccountCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WhatsappBusinessAccountRecordDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WhatsappBusinessAccountTemplate.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WhatsappBusinessAccountTemplateCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishlistInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishlistItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishlistItemCollection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishlistItemInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishlistItemSortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishlistsSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishlistSummary.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishlistToCartResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WishlistUpdateInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WorkflowProcessStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WorkspacePermission.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WorkTypeGroupRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WorkTypeLeadTimeInputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WorkTypeLeadTimeOutputRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WorkTypeRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WrappedMap.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WrappedMapObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WrappedObject.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/WrappedValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Zone.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ZonePage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/Zones.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ZoneSearchPage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ZoneSearchResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ZoneSearchResultType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/ConnectApi/ZoneShowIn.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Context/IndustriesContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/Batchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/BatchableContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/BatchableContextImpl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/Cursor.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/DeletedRecord.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/DeleteResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/DMLOptions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/DuplicateError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/EmptyRecycleBinResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/Error.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/GetDeletedResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/GetUpdatedResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/LeadConvert.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/LeadConvertResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/MergeRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/MergeResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/NestedSaveResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/QueryLocator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/QueryLocatorChunkIterator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/QueryLocatorIterator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/RelationshipSaveResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/SaveResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/UndeleteResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/UnitOfWork.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Database/UpsertResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Datacloud/AdditionalInformationMap.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Datacloud/DuplicateResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Datacloud/FieldDiff.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Datacloud/FieldDifferenceType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Datacloud/FindDuplicates.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Datacloud/FindDuplicatesByIds.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Datacloud/FindDuplicatesResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Datacloud/MatchRecord.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Datacloud/MatchResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/Engagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/EngagementRecordDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/EngagementRecordDetailsList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/Engagements.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/FieldDetailsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/ObjectDetailsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/RecordDetailsRepresentation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/RecordTranscripts.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/RecordTranscriptsList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataRetrieval/Transcript.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/ApexTestData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/AsyncDeleteCallback.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/AsyncSaveCallback.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/AuthenticationCapability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/AuthenticationProtocol.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/Capability.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/Column.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/ColumnSelection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/Connection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/ConnectionParams.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/DataSourceException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/DataSourceUtil.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/DataType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/DeleteContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/DeleteResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/Filter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/FilterType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/IAsyncDeleteCallback.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/IAsyncSaveCallback.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/IdentityType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/Matchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/MatchContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/MatchedRecord.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/MatchEngineSettings.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/MatchResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/OAuthTokenExpiredException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/Order.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/OrderDirection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/Provider.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/QueryAggregation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/QueryContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/QueryUtils.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/ReadContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/SearchContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/SearchUtils.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/Table.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/TableResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/TableSelection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/UpsertContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataSource/UpsertResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataWeave/Result.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/DataWeave/Script.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Dom/Document.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Dom/XmlNode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Dom/XmlNodeType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/ChangeEventHeader.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/EventPublishFailureCallback.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/EventPublishSuccessCallback.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/FailureResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/InvalidReplayIdException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/RetryableException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/SuccessResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/TestBroker.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/TestEventService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/EventBus/TriggerContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Flow/Interview.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/FormulaEval/FormulaBuilder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/FormulaEval/FormulaGlobal.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/FormulaEval/FormulaInstance.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/FormulaEval/FormulaReturnType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/Function.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/FunctionCallback.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/FunctionContextImpl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/FunctionErrorType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/FunctionInvocable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/FunctionInvocation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/FunctionInvocationError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/FunctionInvocationStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/FunctionInvokeMock.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Functions/MockFunctionInvocationFactory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/industriesNlpSvc/NlpResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/industriesNlpSvc/NlpSummarizationResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Invocable/Action.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Invocable/ActionInvoker.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Invocable/ConsentRequestInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Invocable/ConsentStatusRecord.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/IsvPartners/AppAnalytics.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/KbManagement/PublishingService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/GetAppointmentCandidatesInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/GetAppointmentCandidatesInputBuilder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/GetAppointmentSlotsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/GetAppointmentSlotsInputBuilder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/SchedulerResources.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/SchedulerResourcesHelper.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/ServiceAppointmentRequestInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/ServiceResourceInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/ServiceResourceSchedule.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/ServiceResourceScheduleHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/SkillRequirement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/SkillRequirementBuilder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/UnavailableTimeslot.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/WorkType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/LxScheduler/WorkTypeBuilder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/AttachmentRetrievalOption.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/CustomNotification.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/Email.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/EmailAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/EmailFileAttachment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/EmailToSalesforceHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/InboundEmail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/InboundEmailHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/InboundEmailResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/InboundEnvelope.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/MassEmailMessage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/PushNotification.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/PushNotificationPayload.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/RenderEmailTemplateBodyResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/RenderEmailTemplateError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/SendEmailError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/SendEmailResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Messaging/SingleEmailMessage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/AnalyticsCloudComponentLayoutItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/ConsoleComponent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/Container.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/CustomConsoleComponents.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/CustomMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/CustomMetadataValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/DeployCallback.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/DeployCallbackContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/DeployContainer.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/DeployDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/DeployMessage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/DeployProblemType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/DeployResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/DeployStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/FeedItemTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/FeedLayout.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/FeedLayoutComponent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/FeedLayoutComponentType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/FeedLayoutFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/FeedLayoutFilterPosition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/FeedLayoutFilterType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/Layout.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/LayoutColumn.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/LayoutHeader.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/LayoutItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/LayoutSection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/LayoutSectionStyle.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/Metadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/MetadataType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/MetadataValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/MiniLayout.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/OmniInteractionAccessConfig.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/Operations.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/PlatformActionList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/PlatformActionListContextEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/PlatformActionListItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/PlatformActionTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/PrimaryTabComponents.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/QuickActionList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/QuickActionListItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/RelatedContent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/RelatedContentItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/RelatedList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/RelatedListItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/ReportChartComponentLayoutItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/ReportChartComponentSize.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/SidebarComponent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/SortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/StatusCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/SubtabComponents.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/SummaryLayout.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/SummaryLayoutItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/SummaryLayoutStyleEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Metadata/UiBehavior.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/CatalogRatesPreferenceEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/ConfigurationInputEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/ConfigurationOptionsInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/GraphRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/PlaceQuoteException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/PlaceQuoteExecutor.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/PlaceQuoteResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/PlaceQuoteRLMApexProcessor.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/PricingPreferenceEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/RecordResource.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/PlaceQuote/RecordWithReferenceRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/DataCloudIdTokenType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/FieldProperties.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/GlobalPrefCenterApexClass.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/LoadFormData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/LoadParameters.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/PrefCenterException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/PreferenceCenterApexHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/SubmitFormData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/SubmitParameters.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/TokenType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/TokenUtility.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Pref_center/ValidationResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Process/Plugin.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Process/PluginDescribeResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Process/PluginRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Process/PluginResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Process/SparkPlugApi.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/Control.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/DescribeAvailableQuickActionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/DescribeLayoutComponent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/DescribeLayoutItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/DescribeLayoutRow.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/DescribeLayoutSection.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/DescribeQuickActionDefaultValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/DescribeQuickActionParameter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/DescribeQuickActionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/EmptySpace.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/ExpandedLookup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/Field.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/FieldLayoutComponent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/QuickActionDefaults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/QuickActionDefaultsHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/QuickActionRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/QuickActionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/QuickActionTemplateResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/ReportChartComponent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/SControl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/SendEmailQuickActionDefaults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/Separator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/QuickAction/VisualforcePage.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/AggregateColumn.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/BucketField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/BucketFieldValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/BucketType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ColumnDataType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ColumnSortOrder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/CrossFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/CsfGroupType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/DateGranularity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/DetailColumn.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/Dimension.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/EvaluatedCondition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/EvaluatedConditionOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/FeatureNotSupportedException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/FilterOperator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/FilterValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/FormulaType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/GroupingColumn.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/GroupingInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/GroupingValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/InstanceAccessException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/InvalidFilterException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/InvalidReportMetadataException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/InvalidSnapshotDateException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/MetadataException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/NotificationAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/NotificationActionContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportCsf.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportCurrency.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportDataCell.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportDescribeResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportDetailRow.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportDivisionInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportExtendedMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportFact.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportFactWithDetails.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportFactWithSummaries.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportFilterType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportFormat.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportInstance.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportInstanceAttributes.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportManager.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportRunException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportScopeInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportScopeValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportTester.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportTypeColumn.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportTypeColumnCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ReportTypeMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/SortColumn.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/StandardDateFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/StandardDateFilterDuration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/StandardDateFilterDurationGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/StandardFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/StandardFilterInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/StandardFilterInfoPicklist.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/StandardFilterType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/SummaryValue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/ThresholdInformation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/TopRows.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Reports/UnsupportedOperationException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/AbstractTiming.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/AddressableContact.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/AuthRequestHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/AuthRequestResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/AuthRequestResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/AuthRequestResultStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/DeferredTiming.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/EncryptedPaymentData.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/EncryptedPaymentDataHeader.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/MessageDefinitionInputParameter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/PaymentItemStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/PaymentLineItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/PaymentMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/PostalAddress.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/ProcessPaymentHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/ProcessPaymentRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/ProcessPaymentResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/ProcessPaymentResultStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/RecurringTiming.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/ShippingMethod.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/TimeSlotOption.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/TimingIntervalUnit.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/RichMessaging/TimingType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/ChildRelationship.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DataCategory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DataCategoryGroupSobjectTypePair.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DescribeColorResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DescribeDataCategoryGroupResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DescribeDataCategoryGroupStructureResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DescribeFieldResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DescribeIconResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DescribeSObjectResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DescribeTabResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DescribeTabSetResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/DisplayType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/FieldDescribeOptions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/FieldSet.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/FieldSetMember.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/FilteredLookupInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/PicklistEntry.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/RecordTypeInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/SoapType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/SObjectDescribeOptions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/SObjectField.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Schema/SObjectType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Search/KnowledgeSuggestionFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Search/QuestionSuggestionFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Search/SearchResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Search/SearchResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Search/SuggestionOption.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Search/SuggestionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Search/SuggestionResults.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Sfc/ContentDownloadContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Sfc/ContentDownloadHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Sfc/ContentDownloadHandlerFactory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Sfc/MenuActionServices.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Sfc/MenuFactory.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Sfc/MenuItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_enablement/EnablementCustomExercisesLicensing.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_enablement/LearningEvaluation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_enablement/LearningEvaluationResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_enablement/LearningItemEvaluationHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_enablement/LearningItemProgressStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_enablement/LearningItemSerializeDeserializer.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_surveys/ChildQuestion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_surveys/ChildQuestionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_surveys/MatrixQuestion.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_surveys/MatrixQuestionResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_surveys/QuestionChoice.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/sfdc_surveys/SurveyInvitationLinkShortener.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Site/UrlRewriter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ActionDispatcher.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ActionHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ActionPayload.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ActionResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ApiTestRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ApiTestResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/App.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppClient.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppClientMock.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppHomeOpenedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppIcons.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppMentionEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppRateLimitedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppRequestedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppScope.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppsEventAuthorizationsListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppsEventAuthorizationsListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppsUninstallRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppsUninstallResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AppUninstalledEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AuthRevokeRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AuthRevokeResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AuthTeamsListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AuthTeamsListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AuthTestRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/AuthTestResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BillableInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Bookmark.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BookmarksAddRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BookmarksAddResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BookmarksEditRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BookmarksEditResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BookmarksListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BookmarksListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BookmarksRemoveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BookmarksRemoveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BotClient.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BotClientMock.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BotIcons.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BotProfile.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BotsInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/BotsInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Call.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallableHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallParticipant.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallRejectedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsAddRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsAddResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsEndRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsEndResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsParticipantsAddRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsParticipantsAddResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsParticipantsRemoveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsParticipantsRemoveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsUpdateRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/CallsUpdateResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Channel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelArchiveEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelCreatedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelDeletedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelHistoryChangedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelIdChangedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelLeftEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelRenameEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelSharedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelUnarchiveEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChannelUnsharedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatDeleteRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatDeleteResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatDeleteScheduledMessageRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatDeleteScheduledMessageResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatGetPermalinkRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatGetPermalinkResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatMeMessageRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatMeMessageResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatPostEphemeralRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatPostEphemeralResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatPostMessageRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatPostMessageResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatScheduledMessagesListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatScheduledMessagesListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatScheduleMessageRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatScheduleMessageResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatUpdateRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ChatUpdateResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConnectChannel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConnectInvite.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConnectInviteAcceptance.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConnectInviteDetail.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConnectInviteReview.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConnectTeam.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConnectUser.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConnectUserProfile.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Conversation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsAcceptSharedInviteRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsAcceptSharedInviteResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsArchiveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsArchiveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsCloseRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsCloseResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsCreateRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsCreateResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsDeclineSharedInviteRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsDeclineSharedInviteResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsHistoryRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsHistoryResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsInviteRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsInviteResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsInviteSharedRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsInviteSharedResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsJoinRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsJoinResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsKickRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsKickResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsLeaveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsLeaveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsListConnectInvitesRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsListConnectInvitesResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsMarkRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsMarkResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsMembersRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsMembersResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsOpenRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsOpenResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsRenameRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsRenameResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsRepliesRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsRepliesResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsSetPurposeRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsSetPurposeResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsSetTopicRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsSetTopicResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsUnarchiveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationsUnarchiveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ConversationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndEndDndRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndEndDndResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndEndSnoozeRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndEndSnoozeResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndSetSnoozeRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndSetSnoozeResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndTeamInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndTeamInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndUpdatedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/DndUpdatedUserEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/EmailDomainChangedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/EmojiChangedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/EmojiListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/EmojiListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ErrorReport.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ErrorResponseMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Event.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/EventDispatcher.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/EventParameters.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Field.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/File.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FileChangeEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FileComment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FileCreatedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FileDeletedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilePublicEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesDeleteRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesDeleteResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesDownloadRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FileSharedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteAddRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteAddResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteRemoveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteRemoveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteShareRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteShareResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteUpdateRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRemoteUpdateResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRevokePublicURLRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesRevokePublicURLResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesSharedPublicURLRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FilesSharedPublicURLResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/FileUnsharedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GridMigrationFinishedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GridMigrationStartedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GroupArchiveEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GroupCloseEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GroupDeletedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GroupHistoryChangedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GroupLeftEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GroupOpenEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GroupRenameEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/GroupUnarchiveEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/HomeView.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ImCloseEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ImCreatedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ImHistoryChangedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ImOpenEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/IntegrationLog.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/InviteRequestedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Latest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/LinkSharedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Login.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MatchedItem.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MemberJoinedChannelEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MemberLeftChannelEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Message.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageBotEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageChangedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageChannelJoinEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageChannelPostingPermissionsEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageChannelTopicEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageContent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageDeletedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageEkmAccessDeniedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageFileShareEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageGroupTopicEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageMeEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageRepliedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MessageThreadBroadcastEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MigrationExchangeRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/MigrationExchangeResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ModalHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ModalView.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Option.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/OptionDataResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/OptionGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Paging.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/PinAddedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/PinRemovedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/PinsAddRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/PinsAddResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/PinsListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/PinsListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/PinsRemoveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/PinsRemoveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Purpose.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Reaction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionAddedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionRemovedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionsAddRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionsAddResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionsGetRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionsGetResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionsListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionsListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionsRemoveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ReactionsRemoveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Reminder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersAddRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersAddResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersCompleteRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersCompleteResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersDeleteRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersDeleteResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RemindersListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RequestContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RequestedApp.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ResponseMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/RunnableHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SearchAllRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SearchAllResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SearchFilesRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SearchFilesResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SearchMessagesRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SearchMessagesResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SearchResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SharedChannelInviteAcceptedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SharedChannelInviteApprovedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SharedChannelInviteDeclinedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SharedChannelInviteReceivedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ShortcutDispatcher.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ShortcutParameters.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SlashCommandDispatcher.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SlashCommandParameters.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/StarAddedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/StarRemovedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/StarsAddRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/StarsAddResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/StarsListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/StarsListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/StarsRemoveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/StarsRemoveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SubteamCreatedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SubteamMembersChangedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SubteamSelfAddedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SubteamSelfRemovedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/SubteamUpdatedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Team.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamAccessGrantedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamAccessLogsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamAccessLogsResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamAccessRevokedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamBillableInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamBillableInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamDomainChangeEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamIcon.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamIntegrationLogsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamIntegrationLogsResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamJoinEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamProfileGetRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamProfileGetResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TeamRenameEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TestHarness.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TokenInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TokensRevokedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/TokenType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Topic.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UisfUserAuthedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/User.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserChangeEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserClient.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserClientMock.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserGroup.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/Usergroup.Prefs.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsCreateRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsCreateResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsDisableRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsDisableResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsEnableRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsEnableResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsUpdateRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsUpdateResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsUsersListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsUsersListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsUsersUpdateRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsergroupsUsersUpdateResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserMapping.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserMappingResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserMappingService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserMappingUrlServiceProvider.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserProvisioningErrorCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserProvisioningProvider.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserProvisioningResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserResourceDeniedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserResourceGrantedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserResourceRemovedEvent.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersConversationsRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersConversationsResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersDeletePhotoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersDeletePhotoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersGetPresenceRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersGetPresenceResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersIdentityRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersIdentityResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersInfoRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersInfoResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersListRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersListResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersLookupByEmailRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersLookupByEmailResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersProfileGetRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersProfileGetResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersProfileSetRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersProfileSetResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersSetActiveRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersSetActiveResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersSetPresenceRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UsersSetPresenceResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/UserType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/View.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewsOpenRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewsOpenResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewsPublishRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewsPublishResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewsPushRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewsPushResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewsUpdateRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/ViewsUpdateResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/WarningResponseMetadata.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/WorkflowsStepCompletedRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/WorkflowsStepCompletedResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/WorkflowsStepFailedRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/WorkflowsStepFailedResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/WorkflowStepInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/WorkflowStepOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/WorkflowsUpdateStepRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Slack/WorkflowsUpdateStepResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Support/EinsteinBots.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Support/EmailMoving.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Support/EmailTemplateSelector.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Support/EmailToCaseHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Support/MilestoneTriggerTimeCalculator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Support/WorkCapacityCalculation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Support/WorkCapacityDuration.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Support/WorkCapacityInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/AccessLevel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/AccessType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Address.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Answers.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/ApexPages.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/AppExchangeTrialTemplate.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/AppExchangeUserPerms.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Approval.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Assert.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/AssertException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/AsyncException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/AsyncInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/AsyncOptions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Aura.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/BcpProvisionService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/BigObjectException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/BusinessHours.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Callable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/CallbackStatus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/CalloutException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/CanvasException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Cases.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Collator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Communities.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Comparable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Comparator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Continuation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Cookie.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Crypto.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/CustomizationType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Database.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/DataWeaveScriptException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Date.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/DistributedLedgerService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/DmlException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Domain.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/DomainCreator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/DomainParser.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/DomainType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/DuplicateMessageException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/EmailException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/EmailMessages.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/EmailTemplateRenderException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/EncodingUtil.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/EventBus.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/EventObjectException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/ExternalObjectException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/ExternalServiceTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FatalCursorException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FeatureManagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FinalException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Finalizer.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FinalizerContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FinalizerContextImpl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FlexQueue.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FlowException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Formula.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FormulaEvaluationException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FormulaRecalcFieldError.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FormulaRecalcResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/FormulaValidationException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/HandledException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Http.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/HttpCalloutMock.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/HttpRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/HttpResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Ideas.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/IllegalArgumentException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/InvalidHeaderException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/InvalidParameterValueException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/InvalidReadOnlyUserDmlException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Iterable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Iterator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/JSON.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/JSONException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/JSONGenerator.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/JSONParser.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/JSONToken.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/LicenseException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/LimitException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Limits.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/ListException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Location.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/LoggingLevel.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Matcher.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Math.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/MathException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Messaging.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/MultiStaticResourceCalloutMock.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Network.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/NoAccessException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/NoDataFoundException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/NoSuchElementException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/NullPointerException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/OrgInstrumentationContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/OrgInstrumentationOperation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/OrgInstrumentationService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/OrgLimit.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/OrgLimits.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/OrgMetricPublishTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/OrgMetricServiceEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/OrgMetricTypeEnum.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/OrgMonitorFramework.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/PackageOMCopyForRzoneEnvironment.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Packaging.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/PageReference.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/ParentJobResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Pattern.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/PlatformCacheException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/PolyglotException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/ProcedureException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/PushUpgradeCustomizationRepository.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/QueryException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Queueable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/QueueableContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/QueueableContextImpl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/QueueableDuplicateSignature.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/QuickAction.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Quiddity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/RemoteObjectController.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Request.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/RequestImpl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/RequiredFeatureMissingException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/ResetPasswordResult.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/RestContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/RestRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/RestResponse.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/RoundingMode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SandboxContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SandboxPostCopy.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SavePoint.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Schedulable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SchedulableContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SchedulableContextImpl.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Schema.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Search.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SearchException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Security.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SecurityException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SelectOption.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SerializationException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SetupScope.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Site.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SObjectAccessDecision.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SObjectException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SoqlStubProvider.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/StaticResourceCalloutMock.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/StatusCode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/StringException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/StubProvider.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/SupportPredictiveService.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/System.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Test.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/TestAsyncHttp.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Time.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/TimeZone.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/TouchHandledException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/TrailblazerIdentity.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/TransientCursorException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/TriggerContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/TriggerOperation.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Type.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/TypeException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/UIRequest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/UnexpectedException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/UnsupportedOperationException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Url.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/UserInfo.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/UserManagement.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/UUID.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/Version.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/VisualforceException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/WaveTemplateException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/WebServiceCallout.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/WebServiceCalloutFuture.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/WebServiceMock.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/WebStoreContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/XmlException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/XmlStreamReader.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/XmlStreamWriter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/XmlTag.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/System/YubiAuthForAloha.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/TerritoryMgmt/OpportunityTerritory2AssignmentFilter.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/TxnSecurity/Event.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/TxnSecurity/EventCondition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/TxnSecurity/PolicyCondition.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/CollectingBatchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/CommittingBatchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/ConnectorTestUtil.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/DeletingBatchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/DummyConnectorApexHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/FlowProvisionBase.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/LinkingBatchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/PluginBatchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/ProvisioningBatchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/ProvisioningProcessHandlerInput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/ProvisioningProcessHandlerOutput.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/RequestingBatchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/UPASCleaningBatchable.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/UserProvisioningLog.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/UserProvisioningPlugin.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/UserProvisioning/UserProvisioningProcessHandler.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/VisualEditor/DataRow.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/VisualEditor/DesignTimePageContext.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/VisualEditor/DynamicPickList.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/VisualEditor/DynamicPickListRows.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/Dags.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/DagsSearchOptions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/IntelligentAppTab.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/InvalidParameterException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/Lenses.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/LensesSearchOptions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/NodeType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/ProjectionNode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/ProjectionType.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/QueryBuilder.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/QueryBuilderValidationUtil.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/QueryNode.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/Templates.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/TemplatesSearchOptions.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/TrendedDatasetProcessor.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/.sfdx/tools/254/StandardApexLibrary/Wave/WaveQueryException.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AccountRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AddressRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AlertRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AllergyRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AppointmentRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AppointmentRequestRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AppointmentScheduleAggrRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AppointmentSlotConfigRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AppointmentsRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AppointmentUtilizationRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_AsyncApexJobRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename =
    'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_bsConfigurationsAssignedUserRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_CaseMetricRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_CaseRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ClinicGroupRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ClinicRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ClinicScheduleSlotRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ConsultRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ContactRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_DirectivesRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_DischargeSummaryRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_E911MetricsRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ExternalVaLinksRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_HealthDataRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_IAMSSOiVistaInstToUserDUZRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ImmunizationsRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_LabRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_LocationRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_OperatingHoursHolidayRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_OperatingHoursRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_OrderRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_OrgRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_PermissionSetAssignmentRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_PermissionSetRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_PharmacyRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ProblemRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ProgressNoteRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ProviderClinicAssignmentRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ProviderRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_PushTopicRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_RadiologyRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_RecordTypeRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ResourceAbsenceRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_SerializableQueryLocatorChunkTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ServiceAppointmentMetricsRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ServiceAppointmentRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ServiceChannelRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ServiceResourceRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ServiceResourceSkillRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ServiceTerritoryMemberRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_ShiftRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_SkillRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_SSOMockingRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_StaticResourceRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_TaskRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_UserRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_UserUIEventRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_VAFAddressRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
(filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_VAHCe911CustomSettingRepoTest.cls'),
    (data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' }));
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_VaIdentityRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_VisitRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
filename = 'c:/repos/bah/va-teams/force-app/main/default/classes/VCR/Tests/VCR_VitalsRepoTest.cls';
data = fs.readFileSync(filename, { encoding: 'utf8', flag: 'r' });
console.log(filename);
mgr = new ScanManager(parser, language, data, [new ShortIdentifierLengths(), new AllIdentifierLengths()]);

mgr.scan()
    .then((results) => {
        results.forEach((result) => {
            console.log(`${result.rule.Name}:${result.sourceNode.text}`);
        });
    })
    .catch(() => console.log('ERROR'));
